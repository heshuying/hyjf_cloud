<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.DebtPlanConfigMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.DebtPlanConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="debt_plan_type" property="debtPlanType" jdbcType="INTEGER" />
    <result column="debt_plan_type_name" property="debtPlanTypeName" jdbcType="VARCHAR" />
    <result column="debt_plan_prefix" property="debtPlanPrefix" jdbcType="VARCHAR" />
    <result column="debt_lock_period" property="debtLockPeriod" jdbcType="INTEGER" />
    <result column="debt_min_investment" property="debtMinInvestment" jdbcType="DECIMAL" />
    <result column="debt_investment_increment" property="debtInvestmentIncrement" jdbcType="DECIMAL" />
    <result column="debt_max_investment" property="debtMaxInvestment" jdbcType="DECIMAL" />
    <result column="debt_quit_style" property="debtQuitStyle" jdbcType="TINYINT" />
    <result column="debt_quit_period" property="debtQuitPeriod" jdbcType="INTEGER" />
    <result column="min_invest_number" property="minInvestNumber" jdbcType="INTEGER" />
    <result column="max_invest_number" property="maxInvestNumber" jdbcType="INTEGER" />
    <result column="cycle_times" property="cycleTimes" jdbcType="INTEGER" />
    <result column="unable_cycle_times" property="unableCycleTimes" jdbcType="INTEGER" />
    <result column="invest_account_limit" property="investAccountLimit" jdbcType="DECIMAL" />
    <result column="min_surplus_invest_account" property="minSurplusInvestAccount" jdbcType="DECIMAL" />
    <result column="round_amount" property="roundAmount" jdbcType="DECIMAL" />
    <result column="coupon_config" property="couponConfig" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hyjf.am.trade.dao.model.auto.DebtPlanConfig" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, debt_plan_type, debt_plan_type_name, debt_plan_prefix, debt_lock_period, debt_min_investment, 
    debt_investment_increment, debt_max_investment, debt_quit_style, debt_quit_period, 
    min_invest_number, max_invest_number, cycle_times, unable_cycle_times, invest_account_limit, 
    min_surplus_invest_account, round_amount, coupon_config, `status`, del_flag, create_user_id, 
    create_user_name, update_user_id, update_user_name, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ht_debt_plan_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_debt_plan_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ht_debt_plan_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_debt_plan_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfigExample" >
    delete from ht_debt_plan_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_debt_plan_config (debt_plan_type, debt_plan_type_name, debt_plan_prefix, 
      debt_lock_period, debt_min_investment, debt_investment_increment, 
      debt_max_investment, debt_quit_style, debt_quit_period, 
      min_invest_number, max_invest_number, cycle_times, 
      unable_cycle_times, invest_account_limit, min_surplus_invest_account, 
      round_amount, coupon_config, `status`, 
      del_flag, create_user_id, create_user_name, 
      update_user_id, update_user_name, create_time, 
      update_time, remark)
    values (#{debtPlanType,jdbcType=INTEGER}, #{debtPlanTypeName,jdbcType=VARCHAR}, #{debtPlanPrefix,jdbcType=VARCHAR}, 
      #{debtLockPeriod,jdbcType=INTEGER}, #{debtMinInvestment,jdbcType=DECIMAL}, #{debtInvestmentIncrement,jdbcType=DECIMAL}, 
      #{debtMaxInvestment,jdbcType=DECIMAL}, #{debtQuitStyle,jdbcType=TINYINT}, #{debtQuitPeriod,jdbcType=INTEGER}, 
      #{minInvestNumber,jdbcType=INTEGER}, #{maxInvestNumber,jdbcType=INTEGER}, #{cycleTimes,jdbcType=INTEGER}, 
      #{unableCycleTimes,jdbcType=INTEGER}, #{investAccountLimit,jdbcType=DECIMAL}, #{minSurplusInvestAccount,jdbcType=DECIMAL}, 
      #{roundAmount,jdbcType=DECIMAL}, #{couponConfig,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{delFlag,jdbcType=TINYINT}, #{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, 
      #{updateUserId,jdbcType=INTEGER}, #{updateUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_debt_plan_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="debtPlanType != null" >
        debt_plan_type,
      </if>
      <if test="debtPlanTypeName != null" >
        debt_plan_type_name,
      </if>
      <if test="debtPlanPrefix != null" >
        debt_plan_prefix,
      </if>
      <if test="debtLockPeriod != null" >
        debt_lock_period,
      </if>
      <if test="debtMinInvestment != null" >
        debt_min_investment,
      </if>
      <if test="debtInvestmentIncrement != null" >
        debt_investment_increment,
      </if>
      <if test="debtMaxInvestment != null" >
        debt_max_investment,
      </if>
      <if test="debtQuitStyle != null" >
        debt_quit_style,
      </if>
      <if test="debtQuitPeriod != null" >
        debt_quit_period,
      </if>
      <if test="minInvestNumber != null" >
        min_invest_number,
      </if>
      <if test="maxInvestNumber != null" >
        max_invest_number,
      </if>
      <if test="cycleTimes != null" >
        cycle_times,
      </if>
      <if test="unableCycleTimes != null" >
        unable_cycle_times,
      </if>
      <if test="investAccountLimit != null" >
        invest_account_limit,
      </if>
      <if test="minSurplusInvestAccount != null" >
        min_surplus_invest_account,
      </if>
      <if test="roundAmount != null" >
        round_amount,
      </if>
      <if test="couponConfig != null" >
        coupon_config,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="debtPlanType != null" >
        #{debtPlanType,jdbcType=INTEGER},
      </if>
      <if test="debtPlanTypeName != null" >
        #{debtPlanTypeName,jdbcType=VARCHAR},
      </if>
      <if test="debtPlanPrefix != null" >
        #{debtPlanPrefix,jdbcType=VARCHAR},
      </if>
      <if test="debtLockPeriod != null" >
        #{debtLockPeriod,jdbcType=INTEGER},
      </if>
      <if test="debtMinInvestment != null" >
        #{debtMinInvestment,jdbcType=DECIMAL},
      </if>
      <if test="debtInvestmentIncrement != null" >
        #{debtInvestmentIncrement,jdbcType=DECIMAL},
      </if>
      <if test="debtMaxInvestment != null" >
        #{debtMaxInvestment,jdbcType=DECIMAL},
      </if>
      <if test="debtQuitStyle != null" >
        #{debtQuitStyle,jdbcType=TINYINT},
      </if>
      <if test="debtQuitPeriod != null" >
        #{debtQuitPeriod,jdbcType=INTEGER},
      </if>
      <if test="minInvestNumber != null" >
        #{minInvestNumber,jdbcType=INTEGER},
      </if>
      <if test="maxInvestNumber != null" >
        #{maxInvestNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="unableCycleTimes != null" >
        #{unableCycleTimes,jdbcType=INTEGER},
      </if>
      <if test="investAccountLimit != null" >
        #{investAccountLimit,jdbcType=DECIMAL},
      </if>
      <if test="minSurplusInvestAccount != null" >
        #{minSurplusInvestAccount,jdbcType=DECIMAL},
      </if>
      <if test="roundAmount != null" >
        #{roundAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponConfig != null" >
        #{couponConfig,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfigExample" resultType="java.lang.Integer" >
    select count(*) from ht_debt_plan_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_debt_plan_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.debtPlanType != null" >
        debt_plan_type = #{record.debtPlanType,jdbcType=INTEGER},
      </if>
      <if test="record.debtPlanTypeName != null" >
        debt_plan_type_name = #{record.debtPlanTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.debtPlanPrefix != null" >
        debt_plan_prefix = #{record.debtPlanPrefix,jdbcType=VARCHAR},
      </if>
      <if test="record.debtLockPeriod != null" >
        debt_lock_period = #{record.debtLockPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.debtMinInvestment != null" >
        debt_min_investment = #{record.debtMinInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.debtInvestmentIncrement != null" >
        debt_investment_increment = #{record.debtInvestmentIncrement,jdbcType=DECIMAL},
      </if>
      <if test="record.debtMaxInvestment != null" >
        debt_max_investment = #{record.debtMaxInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.debtQuitStyle != null" >
        debt_quit_style = #{record.debtQuitStyle,jdbcType=TINYINT},
      </if>
      <if test="record.debtQuitPeriod != null" >
        debt_quit_period = #{record.debtQuitPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.minInvestNumber != null" >
        min_invest_number = #{record.minInvestNumber,jdbcType=INTEGER},
      </if>
      <if test="record.maxInvestNumber != null" >
        max_invest_number = #{record.maxInvestNumber,jdbcType=INTEGER},
      </if>
      <if test="record.cycleTimes != null" >
        cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.unableCycleTimes != null" >
        unable_cycle_times = #{record.unableCycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.investAccountLimit != null" >
        invest_account_limit = #{record.investAccountLimit,jdbcType=DECIMAL},
      </if>
      <if test="record.minSurplusInvestAccount != null" >
        min_surplus_invest_account = #{record.minSurplusInvestAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.roundAmount != null" >
        round_amount = #{record.roundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.couponConfig != null" >
        coupon_config = #{record.couponConfig,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserName != null" >
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ht_debt_plan_config
    set id = #{record.id,jdbcType=INTEGER},
      debt_plan_type = #{record.debtPlanType,jdbcType=INTEGER},
      debt_plan_type_name = #{record.debtPlanTypeName,jdbcType=VARCHAR},
      debt_plan_prefix = #{record.debtPlanPrefix,jdbcType=VARCHAR},
      debt_lock_period = #{record.debtLockPeriod,jdbcType=INTEGER},
      debt_min_investment = #{record.debtMinInvestment,jdbcType=DECIMAL},
      debt_investment_increment = #{record.debtInvestmentIncrement,jdbcType=DECIMAL},
      debt_max_investment = #{record.debtMaxInvestment,jdbcType=DECIMAL},
      debt_quit_style = #{record.debtQuitStyle,jdbcType=TINYINT},
      debt_quit_period = #{record.debtQuitPeriod,jdbcType=INTEGER},
      min_invest_number = #{record.minInvestNumber,jdbcType=INTEGER},
      max_invest_number = #{record.maxInvestNumber,jdbcType=INTEGER},
      cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      unable_cycle_times = #{record.unableCycleTimes,jdbcType=INTEGER},
      invest_account_limit = #{record.investAccountLimit,jdbcType=DECIMAL},
      min_surplus_invest_account = #{record.minSurplusInvestAccount,jdbcType=DECIMAL},
      round_amount = #{record.roundAmount,jdbcType=DECIMAL},
      coupon_config = #{record.couponConfig,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_debt_plan_config
    set id = #{record.id,jdbcType=INTEGER},
      debt_plan_type = #{record.debtPlanType,jdbcType=INTEGER},
      debt_plan_type_name = #{record.debtPlanTypeName,jdbcType=VARCHAR},
      debt_plan_prefix = #{record.debtPlanPrefix,jdbcType=VARCHAR},
      debt_lock_period = #{record.debtLockPeriod,jdbcType=INTEGER},
      debt_min_investment = #{record.debtMinInvestment,jdbcType=DECIMAL},
      debt_investment_increment = #{record.debtInvestmentIncrement,jdbcType=DECIMAL},
      debt_max_investment = #{record.debtMaxInvestment,jdbcType=DECIMAL},
      debt_quit_style = #{record.debtQuitStyle,jdbcType=TINYINT},
      debt_quit_period = #{record.debtQuitPeriod,jdbcType=INTEGER},
      min_invest_number = #{record.minInvestNumber,jdbcType=INTEGER},
      max_invest_number = #{record.maxInvestNumber,jdbcType=INTEGER},
      cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      unable_cycle_times = #{record.unableCycleTimes,jdbcType=INTEGER},
      invest_account_limit = #{record.investAccountLimit,jdbcType=DECIMAL},
      min_surplus_invest_account = #{record.minSurplusInvestAccount,jdbcType=DECIMAL},
      round_amount = #{record.roundAmount,jdbcType=DECIMAL},
      coupon_config = #{record.couponConfig,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfig" >
    update ht_debt_plan_config
    <set >
      <if test="debtPlanType != null" >
        debt_plan_type = #{debtPlanType,jdbcType=INTEGER},
      </if>
      <if test="debtPlanTypeName != null" >
        debt_plan_type_name = #{debtPlanTypeName,jdbcType=VARCHAR},
      </if>
      <if test="debtPlanPrefix != null" >
        debt_plan_prefix = #{debtPlanPrefix,jdbcType=VARCHAR},
      </if>
      <if test="debtLockPeriod != null" >
        debt_lock_period = #{debtLockPeriod,jdbcType=INTEGER},
      </if>
      <if test="debtMinInvestment != null" >
        debt_min_investment = #{debtMinInvestment,jdbcType=DECIMAL},
      </if>
      <if test="debtInvestmentIncrement != null" >
        debt_investment_increment = #{debtInvestmentIncrement,jdbcType=DECIMAL},
      </if>
      <if test="debtMaxInvestment != null" >
        debt_max_investment = #{debtMaxInvestment,jdbcType=DECIMAL},
      </if>
      <if test="debtQuitStyle != null" >
        debt_quit_style = #{debtQuitStyle,jdbcType=TINYINT},
      </if>
      <if test="debtQuitPeriod != null" >
        debt_quit_period = #{debtQuitPeriod,jdbcType=INTEGER},
      </if>
      <if test="minInvestNumber != null" >
        min_invest_number = #{minInvestNumber,jdbcType=INTEGER},
      </if>
      <if test="maxInvestNumber != null" >
        max_invest_number = #{maxInvestNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        cycle_times = #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="unableCycleTimes != null" >
        unable_cycle_times = #{unableCycleTimes,jdbcType=INTEGER},
      </if>
      <if test="investAccountLimit != null" >
        invest_account_limit = #{investAccountLimit,jdbcType=DECIMAL},
      </if>
      <if test="minSurplusInvestAccount != null" >
        min_surplus_invest_account = #{minSurplusInvestAccount,jdbcType=DECIMAL},
      </if>
      <if test="roundAmount != null" >
        round_amount = #{roundAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponConfig != null" >
        coupon_config = #{couponConfig,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfig" >
    update ht_debt_plan_config
    set debt_plan_type = #{debtPlanType,jdbcType=INTEGER},
      debt_plan_type_name = #{debtPlanTypeName,jdbcType=VARCHAR},
      debt_plan_prefix = #{debtPlanPrefix,jdbcType=VARCHAR},
      debt_lock_period = #{debtLockPeriod,jdbcType=INTEGER},
      debt_min_investment = #{debtMinInvestment,jdbcType=DECIMAL},
      debt_investment_increment = #{debtInvestmentIncrement,jdbcType=DECIMAL},
      debt_max_investment = #{debtMaxInvestment,jdbcType=DECIMAL},
      debt_quit_style = #{debtQuitStyle,jdbcType=TINYINT},
      debt_quit_period = #{debtQuitPeriod,jdbcType=INTEGER},
      min_invest_number = #{minInvestNumber,jdbcType=INTEGER},
      max_invest_number = #{maxInvestNumber,jdbcType=INTEGER},
      cycle_times = #{cycleTimes,jdbcType=INTEGER},
      unable_cycle_times = #{unableCycleTimes,jdbcType=INTEGER},
      invest_account_limit = #{investAccountLimit,jdbcType=DECIMAL},
      min_surplus_invest_account = #{minSurplusInvestAccount,jdbcType=DECIMAL},
      round_amount = #{roundAmount,jdbcType=DECIMAL},
      coupon_config = #{couponConfig,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.DebtPlanConfig" >
    update ht_debt_plan_config
    set debt_plan_type = #{debtPlanType,jdbcType=INTEGER},
      debt_plan_type_name = #{debtPlanTypeName,jdbcType=VARCHAR},
      debt_plan_prefix = #{debtPlanPrefix,jdbcType=VARCHAR},
      debt_lock_period = #{debtLockPeriod,jdbcType=INTEGER},
      debt_min_investment = #{debtMinInvestment,jdbcType=DECIMAL},
      debt_investment_increment = #{debtInvestmentIncrement,jdbcType=DECIMAL},
      debt_max_investment = #{debtMaxInvestment,jdbcType=DECIMAL},
      debt_quit_style = #{debtQuitStyle,jdbcType=TINYINT},
      debt_quit_period = #{debtQuitPeriod,jdbcType=INTEGER},
      min_invest_number = #{minInvestNumber,jdbcType=INTEGER},
      max_invest_number = #{maxInvestNumber,jdbcType=INTEGER},
      cycle_times = #{cycleTimes,jdbcType=INTEGER},
      unable_cycle_times = #{unableCycleTimes,jdbcType=INTEGER},
      invest_account_limit = #{investAccountLimit,jdbcType=DECIMAL},
      min_surplus_invest_account = #{minSurplusInvestAccount,jdbcType=DECIMAL},
      round_amount = #{roundAmount,jdbcType=DECIMAL},
      coupon_config = #{couponConfig,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>