<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.BankRepayOrgFreezeLogMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="repay_user_id" property="repayUserId" jdbcType="INTEGER" />
    <result column="repay_user_name" property="repayUserName" jdbcType="VARCHAR" />
    <result column="borrow_user_id" property="borrowUserId" jdbcType="INTEGER" />
    <result column="borrow_user_name" property="borrowUserName" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
    <result column="plan_nid" property="planNid" jdbcType="VARCHAR" />
    <result column="inst_code" property="instCode" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="repay_account" property="repayAccount" jdbcType="DECIMAL" />
    <result column="repay_fee" property="repayFee" jdbcType="DECIMAL" />
    <result column="lower_interest" property="lowerInterest" jdbcType="DECIMAL" />
    <result column="penalty_amount" property="penaltyAmount" jdbcType="DECIMAL" />
    <result column="default_interest" property="defaultInterest" jdbcType="DECIMAL" />
    <result column="borrow_period" property="borrowPeriod" jdbcType="VARCHAR" />
    <result column="total_period" property="totalPeriod" jdbcType="INTEGER" />
    <result column="current_period" property="currentPeriod" jdbcType="INTEGER" />
    <result column="all_repay_flag" property="allRepayFlag" jdbcType="TINYINT" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, repay_user_id, repay_user_name, borrow_user_id, borrow_user_name, account, order_id, 
    borrow_nid, plan_nid, inst_code, amount, repay_account, repay_fee, lower_interest, 
    penalty_amount, default_interest, borrow_period, total_period, current_period, all_repay_flag, 
    del_flag, create_time, create_user_id, create_user_name, update_time, update_user_id, 
    update_user_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_bank_repay_org_freeze_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_bank_repay_org_freeze_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_bank_repay_org_freeze_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLogExample" >
    delete from ht_bank_repay_org_freeze_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_repay_org_freeze_log (repay_user_id, repay_user_name, borrow_user_id, 
      borrow_user_name, account, order_id, 
      borrow_nid, plan_nid, inst_code, 
      amount, repay_account, repay_fee, 
      lower_interest, penalty_amount, default_interest, 
      borrow_period, total_period, current_period, 
      all_repay_flag, del_flag, create_time, 
      create_user_id, create_user_name, update_time, 
      update_user_id, update_user_name)
    values (#{repayUserId,jdbcType=INTEGER}, #{repayUserName,jdbcType=VARCHAR}, #{borrowUserId,jdbcType=INTEGER}, 
      #{borrowUserName,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{borrowNid,jdbcType=VARCHAR}, #{planNid,jdbcType=VARCHAR}, #{instCode,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{repayAccount,jdbcType=DECIMAL}, #{repayFee,jdbcType=DECIMAL}, 
      #{lowerInterest,jdbcType=DECIMAL}, #{penaltyAmount,jdbcType=DECIMAL}, #{defaultInterest,jdbcType=DECIMAL}, 
      #{borrowPeriod,jdbcType=VARCHAR}, #{totalPeriod,jdbcType=INTEGER}, #{currentPeriod,jdbcType=INTEGER}, 
      #{allRepayFlag,jdbcType=TINYINT}, #{delFlag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=INTEGER}, #{updateUserName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_repay_org_freeze_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="repayUserId != null" >
        repay_user_id,
      </if>
      <if test="repayUserName != null" >
        repay_user_name,
      </if>
      <if test="borrowUserId != null" >
        borrow_user_id,
      </if>
      <if test="borrowUserName != null" >
        borrow_user_name,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="borrowNid != null" >
        borrow_nid,
      </if>
      <if test="planNid != null" >
        plan_nid,
      </if>
      <if test="instCode != null" >
        inst_code,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="repayAccount != null" >
        repay_account,
      </if>
      <if test="repayFee != null" >
        repay_fee,
      </if>
      <if test="lowerInterest != null" >
        lower_interest,
      </if>
      <if test="penaltyAmount != null" >
        penalty_amount,
      </if>
      <if test="defaultInterest != null" >
        default_interest,
      </if>
      <if test="borrowPeriod != null" >
        borrow_period,
      </if>
      <if test="totalPeriod != null" >
        total_period,
      </if>
      <if test="currentPeriod != null" >
        current_period,
      </if>
      <if test="allRepayFlag != null" >
        all_repay_flag,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="repayUserId != null" >
        #{repayUserId,jdbcType=INTEGER},
      </if>
      <if test="repayUserName != null" >
        #{repayUserName,jdbcType=VARCHAR},
      </if>
      <if test="borrowUserId != null" >
        #{borrowUserId,jdbcType=INTEGER},
      </if>
      <if test="borrowUserName != null" >
        #{borrowUserName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="planNid != null" >
        #{planNid,jdbcType=VARCHAR},
      </if>
      <if test="instCode != null" >
        #{instCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="repayAccount != null" >
        #{repayAccount,jdbcType=DECIMAL},
      </if>
      <if test="repayFee != null" >
        #{repayFee,jdbcType=DECIMAL},
      </if>
      <if test="lowerInterest != null" >
        #{lowerInterest,jdbcType=DECIMAL},
      </if>
      <if test="penaltyAmount != null" >
        #{penaltyAmount,jdbcType=DECIMAL},
      </if>
      <if test="defaultInterest != null" >
        #{defaultInterest,jdbcType=DECIMAL},
      </if>
      <if test="borrowPeriod != null" >
        #{borrowPeriod,jdbcType=VARCHAR},
      </if>
      <if test="totalPeriod != null" >
        #{totalPeriod,jdbcType=INTEGER},
      </if>
      <if test="currentPeriod != null" >
        #{currentPeriod,jdbcType=INTEGER},
      </if>
      <if test="allRepayFlag != null" >
        #{allRepayFlag,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLogExample" resultType="java.lang.Integer" >
    select count(*) from ht_bank_repay_org_freeze_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_bank_repay_org_freeze_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.repayUserId != null" >
        repay_user_id = #{record.repayUserId,jdbcType=INTEGER},
      </if>
      <if test="record.repayUserName != null" >
        repay_user_name = #{record.repayUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowUserId != null" >
        borrow_user_id = #{record.borrowUserId,jdbcType=INTEGER},
      </if>
      <if test="record.borrowUserName != null" >
        borrow_user_name = #{record.borrowUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowNid != null" >
        borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="record.planNid != null" >
        plan_nid = #{record.planNid,jdbcType=VARCHAR},
      </if>
      <if test="record.instCode != null" >
        inst_code = #{record.instCode,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.repayAccount != null" >
        repay_account = #{record.repayAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.repayFee != null" >
        repay_fee = #{record.repayFee,jdbcType=DECIMAL},
      </if>
      <if test="record.lowerInterest != null" >
        lower_interest = #{record.lowerInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.penaltyAmount != null" >
        penalty_amount = #{record.penaltyAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.defaultInterest != null" >
        default_interest = #{record.defaultInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.borrowPeriod != null" >
        borrow_period = #{record.borrowPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPeriod != null" >
        total_period = #{record.totalPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.currentPeriod != null" >
        current_period = #{record.currentPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.allRepayFlag != null" >
        all_repay_flag = #{record.allRepayFlag,jdbcType=TINYINT},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserName != null" >
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_bank_repay_org_freeze_log
    set id = #{record.id,jdbcType=INTEGER},
      repay_user_id = #{record.repayUserId,jdbcType=INTEGER},
      repay_user_name = #{record.repayUserName,jdbcType=VARCHAR},
      borrow_user_id = #{record.borrowUserId,jdbcType=INTEGER},
      borrow_user_name = #{record.borrowUserName,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      plan_nid = #{record.planNid,jdbcType=VARCHAR},
      inst_code = #{record.instCode,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      repay_account = #{record.repayAccount,jdbcType=DECIMAL},
      repay_fee = #{record.repayFee,jdbcType=DECIMAL},
      lower_interest = #{record.lowerInterest,jdbcType=DECIMAL},
      penalty_amount = #{record.penaltyAmount,jdbcType=DECIMAL},
      default_interest = #{record.defaultInterest,jdbcType=DECIMAL},
      borrow_period = #{record.borrowPeriod,jdbcType=VARCHAR},
      total_period = #{record.totalPeriod,jdbcType=INTEGER},
      current_period = #{record.currentPeriod,jdbcType=INTEGER},
      all_repay_flag = #{record.allRepayFlag,jdbcType=TINYINT},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLog" >
    update ht_bank_repay_org_freeze_log
    <set >
      <if test="repayUserId != null" >
        repay_user_id = #{repayUserId,jdbcType=INTEGER},
      </if>
      <if test="repayUserName != null" >
        repay_user_name = #{repayUserName,jdbcType=VARCHAR},
      </if>
      <if test="borrowUserId != null" >
        borrow_user_id = #{borrowUserId,jdbcType=INTEGER},
      </if>
      <if test="borrowUserName != null" >
        borrow_user_name = #{borrowUserName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="planNid != null" >
        plan_nid = #{planNid,jdbcType=VARCHAR},
      </if>
      <if test="instCode != null" >
        inst_code = #{instCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="repayAccount != null" >
        repay_account = #{repayAccount,jdbcType=DECIMAL},
      </if>
      <if test="repayFee != null" >
        repay_fee = #{repayFee,jdbcType=DECIMAL},
      </if>
      <if test="lowerInterest != null" >
        lower_interest = #{lowerInterest,jdbcType=DECIMAL},
      </if>
      <if test="penaltyAmount != null" >
        penalty_amount = #{penaltyAmount,jdbcType=DECIMAL},
      </if>
      <if test="defaultInterest != null" >
        default_interest = #{defaultInterest,jdbcType=DECIMAL},
      </if>
      <if test="borrowPeriod != null" >
        borrow_period = #{borrowPeriod,jdbcType=VARCHAR},
      </if>
      <if test="totalPeriod != null" >
        total_period = #{totalPeriod,jdbcType=INTEGER},
      </if>
      <if test="currentPeriod != null" >
        current_period = #{currentPeriod,jdbcType=INTEGER},
      </if>
      <if test="allRepayFlag != null" >
        all_repay_flag = #{allRepayFlag,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.BankRepayOrgFreezeLog" >
    update ht_bank_repay_org_freeze_log
    set repay_user_id = #{repayUserId,jdbcType=INTEGER},
      repay_user_name = #{repayUserName,jdbcType=VARCHAR},
      borrow_user_id = #{borrowUserId,jdbcType=INTEGER},
      borrow_user_name = #{borrowUserName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      plan_nid = #{planNid,jdbcType=VARCHAR},
      inst_code = #{instCode,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      repay_account = #{repayAccount,jdbcType=DECIMAL},
      repay_fee = #{repayFee,jdbcType=DECIMAL},
      lower_interest = #{lowerInterest,jdbcType=DECIMAL},
      penalty_amount = #{penaltyAmount,jdbcType=DECIMAL},
      default_interest = #{defaultInterest,jdbcType=DECIMAL},
      borrow_period = #{borrowPeriod,jdbcType=VARCHAR},
      total_period = #{totalPeriod,jdbcType=INTEGER},
      current_period = #{currentPeriod,jdbcType=INTEGER},
      all_repay_flag = #{allRepayFlag,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_user_name = #{updateUserName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>