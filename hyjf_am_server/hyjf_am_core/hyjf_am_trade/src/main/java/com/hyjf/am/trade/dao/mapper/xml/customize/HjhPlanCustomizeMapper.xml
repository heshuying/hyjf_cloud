<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.customize.HjhPlanCustomizeMapper">


	<update id="updateOfPlanJoin" parameterType="com.hyjf.am.trade.dao.model.auto.Account">
		update ht_account
		set
		bank_total = IFNULL(bank_total,0) + #{bankTotal,jdbcType=DECIMAL},
		plan_account_wait = IFNULL(plan_account_wait,0) + #{planAccountWait,jdbcType=DECIMAL},
		plan_capital_wait = IFNULL(plan_capital_wait,0) + #{planCapitalWait,jdbcType=DECIMAL},
		plan_interest_wait = IFNULL(plan_interest_wait,0) + #{planInterestWait,jdbcType=DECIMAL}
		where
		user_id = #{userId,jdbcType=INTEGER}
	</update>

	<update id="updateByDebtPlanId"  parameterType="Map">
		UPDATE ht_hjh_plan
		SET
		available_invest_account = IFNULL(available_invest_account,0) - #{accountDecimal,jdbcType=DECIMAL},
		repay_wait_all = IFNULL(repay_wait_all,0) + #{accountDecimal,jdbcType=DECIMAL} + #{earnings,jdbcType=DECIMAL},
		join_total = IFNULL(join_total,0) + #{accountDecimal,jdbcType=DECIMAL},
		plan_wait_captical = IFNULL(plan_wait_captical,0) + #{accountDecimal,jdbcType=DECIMAL},
		plan_wait_interest = IFNULL(plan_wait_interest,0) + #{earnings,jdbcType=DECIMAL}
		WHERE
		plan_nid=#{planId}
	</update>

	<resultMap id="userHjhInvistDetailMap" type="com.hyjf.am.trade.dao.model.customize.UserHjhInvistDetailCustomize">
		<id column="plan_nid" property="planNid" jdbcType="VARCHAR" />
		<result column="plan_name" property="planName" jdbcType="VARCHAR" />
		<result column="accede_order_id" property="accedeOrderId" jdbcType="VARCHAR" />
		<result column="expect_apr" property="planApr" jdbcType="VARCHAR" />
		<result column="lock_period" property="planPeriod" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="accede_account" property="accedeAccount" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="VARCHAR" />
		<result column="quit_time" property="quitTime" jdbcType="VARCHAR" />
		<result column="last_payment_time" property="lastPaymentTime" jdbcType="VARCHAR" />
		<result column="acctual_payment_time" property="acctualPaymentTime" jdbcType="VARCHAR" />
		<result column="count_interest_time" property="countInterestTime" jdbcType="VARCHAR" />

		<result column="wait_total" property="waitTotal" jdbcType="VARCHAR" />
		<result column="wait_interest" property="waitInterest" jdbcType="VARCHAR" />
		<result column="received_total" property="receivedTotal" jdbcType="VARCHAR" />
		<result column="received_interest" property="receivedInterest" jdbcType="VARCHAR" />
		<result column="all_total" property="allTotal" jdbcType="VARCHAR" />
		<result column="all_interest" property="allInterest" jdbcType="VARCHAR" />
		<result column="should_pay_total" property="shouldPayTotal" jdbcType="VARCHAR" />
		<result column="repay_method" property="repayMethod" jdbcType="VARCHAR" />
		<result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
		<result column="repay_actual_time" property="repayActualTime" jdbcType="VARCHAR" />
		<result column="wait_capital" property="waitCapital" jdbcType="VARCHAR" />
		<result column="repay_style" property="repayStyle" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="HjhPlanAppMap" type="com.hyjf.am.trade.dao.model.customize.HjhPlanCustomize">
		<id column="plan_nid" property="planNid" jdbcType="VARCHAR" />
		<result column="plan_name" property="planName" jdbcType="VARCHAR" />
		<result column="expect_apr" property="planApr" jdbcType="VARCHAR" />
		<result column="lock_period" property="planPeriod" jdbcType="VARCHAR" />
		<result column="is_month" property="isMonth" jdbcType="VARCHAR" />
		<result column="available_invest_account" property="availableInvestAccount" jdbcType="VARCHAR" />
		<result column="plan_invest_status" property="status" jdbcType="VARCHAR" />
		<result column="plan_invest_status_name" property="statusName" jdbcType="VARCHAR" />
		<result column="coupon_config" property="couponEnable" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectUserHjhInvistDetail" resultMap="userHjhInvistDetailMap" parameterType="Map">
		SELECT
		hhp.plan_nid plan_nid,
		hhp.plan_name plan_name,
		hha.accede_order_id accede_order_id,
		CONCAT(hhp.expect_apr, '%') expect_apr,
		CASE
		WHEN hhp.borrow_style ='endday' THEN CONCAT(hhp.lock_period,'天')
		ELSE CONCAT(hhp.lock_period,'个月')
		END AS lock_period,
		hha.user_id user_id,
		hha.accede_account accede_account,
	    hha.add_time AS add_time,
		IFNULL(FROM_UNIXTIME( IF(hha.quit_time=0,NULL,hha.quit_time), '%Y-%m-%d' ),'待确认') AS quit_time,
		IFNULL(FROM_UNIXTIME( IF(hha.last_payment_time=0,NULL,hha.last_payment_time), '%Y-%m-%d' ),'待确认') AS last_payment_time,
		IFNULL(FROM_UNIXTIME( IF(hha.acctual_payment_time=0,NULL,hha.acctual_payment_time), '%Y-%m-%d' ),'待确认') AS acctual_payment_time,
		IFNULL(FROM_UNIXTIME( IF(hha.count_interest_time=0,NULL,hha.count_interest_time), '%Y-%m-%d' ),'待确认') AS count_interest_time,
		hha.wait_total wait_total,
		hha.wait_interest wait_interest,
		hha.received_total received_total,
		hha.wait_captical wait_captical,
		hhp.borrow_style repay_style,
		hha.received_interest received_interest,
		(hha.wait_total + hha.received_total) all_total,
		(hha.wait_interest + hha.received_interest) all_interest,

		SUBSTRING(FORMAT(hha.should_pay_total,4),1,LENGTH(FORMAT(hha.should_pay_total,4))-2) AS should_pay_total,

		(SELECT hbs.NAME FROM ht_borrow_style hbs where hbs.nid = hhp.borrow_style limit 1 ) repay_method,
		hha.order_status order_status,
		<!-- 新加实际退出时间 -->
		FROM_UNIXTIME(hhr.repay_actual_time, '%Y-%m-%d') AS repay_actual_time
		FROM ht_hjh_accede hha
		LEFT JOIN ht_hjh_plan hhp ON hha.plan_nid=hhp.plan_nid
		LEFT JOIN ht_hjh_repay hhr ON hhr.accede_order_id = hha.accede_order_id
		WHERE hha.accede_order_id = #{accedeOrderId} and hha.user_id =#{userId}
	</select>

	<!--还款/终止未完全承接的债权时,减扣计划的开放额度-->
	<update id="updateRepayPlanAccount" parameterType="com.hyjf.am.trade.dao.model.auto.HjhPlan">
		update ht_hjh_plan
		set
		available_invest_account = IFNULL(available_invest_account,0) - #{availableInvestAccount,jdbcType=DECIMAL}
		where
		plan_nid = #{planNid,jdbcType=VARCHAR}
	</update>
	
	<update id="updateHjhRepayForHjhRepay" parameterType="com.hyjf.am.trade.dao.model.auto.HjhRepay">
		update ht_hjh_repay
		set
		repay_total = IFNULL(repay_total,0) + #{repayTotal,jdbcType=DECIMAL},
		plan_repay_capital = IFNULL(plan_repay_capital,0) + #{planRepayCapital,jdbcType=DECIMAL},
		plan_repay_interest = IFNULL(plan_repay_interest,0) + #{planRepayInterest,jdbcType=DECIMAL},
		repay_already = IFNULL(repay_already,0) + #{repayAlready,jdbcType=DECIMAL}
		where
		id = #{id,jdbcType=INTEGER}
	</update>

	<!--add 汇计划三期 计划订单投资笔数累加 liubin 20180515 start;
	 add 汇计划三期 计划订单投资笔数累加 liubin 20180515 end;
	 add 汇计划三期 汇计划自动投资(收债转服务费) liubin 20180515 start;-->
	<!--add 汇计划三期 汇计划自动投资(收债转服务费) liubin 20180515 end-->
	<update id="updateHjhAccedeForHjhProcess" parameterType="com.hyjf.am.trade.dao.model.auto.HjhAccede">
		update ht_hjh_accede
		<set>
			<if test="alreadyInvest != null">
				already_invest = IFNULL(already_invest,0) + #{alreadyInvest,jdbcType=DECIMAL},
			</if>
			<if test="availableInvestAccount != null">
				available_invest_account = IFNULL(available_invest_account,0) +
				#{availableInvestAccount,jdbcType=DECIMAL},
			</if>
			<if test="frostAccount != null">
				frost_account = IFNULL(frost_account,0) +
				#{frostAccount,jdbcType=DECIMAL},
			</if>
			<if test="waitTotal != null">
				wait_total = IFNULL(wait_total,0) + #{waitTotal,jdbcType=DECIMAL},
			</if>
			<if test="waitInterest != null">
				wait_interest = IFNULL(wait_interest,0) + #{waitInterest,jdbcType=DECIMAL},
			</if>
			<if test="waitCaptical != null">
				wait_captical = IFNULL(wait_captical,0) + #{waitCaptical,jdbcType=DECIMAL},
			</if>

			<if test="investCounts != null">
				invest_counts = invest_counts + #{investCounts,jdbcType=INTEGER},
			</if>

			<if test="lqdServiceFee != null">
				lqd_service_fee = lqd_service_fee + #{lqdServiceFee,jdbcType=DECIMAL},
			</if>

			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=INTEGER}
			</if>
		</set>
		where
		id = #{id,jdbcType=INTEGER}
	</update>
	
	
	
	<resultMap id="sumMap" type="com.hyjf.am.vo.trade.hjh.HjhPlanSumVO">
		<result column="sumRepayWaitAll" property="sumWaitTotal" jdbcType="VARCHAR" />
		<result column="sumOpenAccount" property="sumOpenAccount" jdbcType="VARCHAR" />
		<result column="sumJoinTotal" property="sumJoinTotal" jdbcType="VARCHAR" />
	</resultMap>
	<select id="getCalcSumByParam" resultMap="sumMap" parameterType="com.hyjf.am.resquest.admin.PlanListCustomizeRequest" >
	    select
	      SUM(repay_wait_all) AS sumRepayWaitAll,
	      SUM(available_invest_account) AS sumOpenAccount,
	      SUM(join_total) AS sumJoinTotal
	    from ht_hjh_plan plan
	    <include refid="Where_hjh_Clause" />
    </select>
    
    <sql id="Where_hjh_Clause">
		<where>
			<if test="planNidSrch != null and planNidSrch !='' ">
				AND plan.plan_nid LIKE CONCAT('%', #{planNidSrch}, '%')
			</if>
			<if test="planNameSrch != null and planNameSrch !='' ">
				AND plan.plan_name LIKE CONCAT('%', #{planNameSrch}, '%')
			</if>
			<if test="lockPeriodSrch != null and lockPeriodSrch !=''">
				AND plan.lock_period = #{lockPeriodSrch}
			</if>
			<if test="planStatusSrch != null and planStatusSrch !=''">
				AND plan.plan_invest_status = #{planStatusSrch}
			</if>
			<if test="planDisplayStatusSrch != null and planDisplayStatusSrch !=''">
				AND plan.plan_display_status = #{planDisplayStatusSrch}
			</if>
			<if test="borrowStyleSrch != null and borrowStyleSrch !=''">
				AND plan.borrow_style = #{borrowStyleSrch}
			</if>
 			<if test="addTimeStart != null and addTimeStart !='' ">
				AND FROM_UNIXTIME( plan.add_time, '%Y-%m-%d' ) <![CDATA[>=]]> #{addTimeStart}
			</if>
			<if test="addTimeEnd != null and addTimeEnd !='' ">
				AND FROM_UNIXTIME( plan.add_time, '%Y-%m-%d' ) <![CDATA[<=]]> #{addTimeEnd}
			</if>
		</where>
	</sql>



	<select id="getHjhPlanAppList" resultMap="HjhPlanAppMap" parameterType="Map">
		<include refid="selectAppIndexTemplate" />
		<choose>
			<when test="lockFlag != null and lockFlag == 1">
				ORDER BY t.order_by_lock_period ASC
			</when>
			<otherwise>
				ORDER BY t.order_by_status_name,t.order_by_available_invest_account ASC, t.order_by_lock_period ASC
			</otherwise>
		</choose>
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>

	<sql id="selectAppIndexTemplate">
		SELECT t.* FROM (SELECT
		  hp.id as order_by_id,
          hp.plan_nid AS plan_nid,
          hp.plan_name AS plan_name,
          hp.expect_apr AS expect_apr,
          CASE
            WHEN hp.borrow_style = 'endday'
            THEN CONCAT(hp.lock_period, '天')
            ELSE CONCAT(hp.lock_period, '个月')
          END AS lock_period,
          CASE
            WHEN hp.plan_invest_status = 1
            THEN CONCAT(
              FORMAT(
                hp.available_invest_account / 10000,
                2
              ),
              '万'
            )
            WHEN hp.plan_invest_status = 2
            THEN '0.00 万'
            ELSE '0.00 万'
          END AS available_invest_account,
          CASE
            WHEN hp.plan_invest_status = 1
            THEN hp.available_invest_account
            ELSE 0
          END AS order_by_available_invest_account,
          hp.plan_invest_status AS plan_invest_status,
          CASE
            WHEN hp.plan_invest_status = 1
            AND FORMAT(hp.available_invest_account, 2) = 0.00
            THEN '稍后开启'
            WHEN hp.plan_invest_status = 1
            THEN '立即加入'
            WHEN hp.plan_invest_status = 2
            THEN '稍后开启'
            ELSE ''
          END AS plan_invest_status_name,
          CASE
            WHEN hp.plan_invest_status = 1
            AND FORMAT(hp.available_invest_account, 2) = 0.00
            THEN 2
            WHEN hp.plan_invest_status = 1
            THEN 1
            WHEN hp.plan_invest_status = 2
            THEN 2
            ELSE 2
          END AS order_by_status_name,
          CASE
            WHEN hp.borrow_style = 'endday'
            THEN hp.lock_period
            ELSE hp.lock_period * 30
          END AS order_by_lock_period,
          coupon_config
        FROM
          ht_hjh_plan hp
        WHERE hp.del_flag = 0 AND hp.plan_display_status = 1) t
	</sql>

	<update id="updatePlanAccount" parameterType="com.hyjf.am.trade.dao.model.auto.HjhPlan">
		update ht_hjh_plan
		set
		<if test="joinTotal != null">
			join_total = IFNULL(join_total,0) + #{joinTotal,jdbcType=DECIMAL},
		</if>
		<if test="availableInvestAccount != null">
			available_invest_account = IFNULL(available_invest_account,0) + #{availableInvestAccount,jdbcType=DECIMAL}
		</if>
		where
		plan_nid = #{planNid,jdbcType=VARCHAR}
	</update>

	<select id="getPlanBorrowListCount" resultType="int">

			SELECT COUNT(1)
		FROM
		(
				SELECT DISTINCT *
		FROM(
		(SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hbi.company_or_personal,
				IFNULL(
					hbi.finance_purpose,
					'无借款用途'
				) financePurpose,
				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.create_time

		FROM
			ht_borrow hb
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		left join ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid
		JOIN ht_hjh_debt_credit ON credit_status IN (0, 1)
		AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
		WHERE
		ht_hjh_debt_credit.plan_nid_new = #{planNid}
		AND hb.STATUS = 4
	ORDER BY
				hb.create_time ASC
		)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					hbi.company_or_personal,
					IFNULL(
						hbi.finance_purpose,
						'无借款用途'
					) financePurpose,
					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.create_time
			FROM
				ht_borrow hb
			LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
			left join ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid
			WHERE
				hb.plan_nid = #{planNid}
			AND hb.STATUS = 2
			AND hb.borrow_full_status = 0
			ORDER BY
				hb.create_time ASC
			)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					hbi.company_or_personal,
					IFNULL(
						hbi.finance_purpose,
						'无借款用途'
					) financePurpose,
					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.create_time
		FROM
			ht_borrow hb
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		left join ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid
		WHERE
			hb.plan_nid = #{planNid}
		AND hb.borrow_full_status = 1
		<if test="startTime != null">
			AND hb.borrow_full_time &gt;= #{startTime}
		</if>
		<if test="endTime != null">
			AND hb.borrow_full_time &lt;= #{endTime}
		</if>
ORDER BY
				hb.create_time ASC
		)
		UNION ALL
			(
			SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hbi.company_or_personal,
				IFNULL(
					hbi.finance_purpose,
					'无借款用途'
				) financePurpose,
				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.create_time
		FROM
			ht_borrow hb
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		left join ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid
		JOIN ht_hjh_debt_credit ON credit_capital_wait = 0

		<if test="startTime != null">
			AND end_time &gt;= #{startTime}
		</if>
		<if test="endTime != null">
			AND end_time &lt;= #{endTime}
		</if>
		AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
		WHERE
			ht_hjh_debt_credit.plan_nid_new = #{planNid}
			ORDER BY
				hb.create_time ASC
		))t
		) AS t
	</select>
    <resultMap id="planBorrowList" type="com.hyjf.am.vo.trade.borrow.BorrowVO">
		<result column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
		<result column="borrow_user_name" property="borrowUserName" jdbcType="VARCHAR" />
		<result column="borrow_apr" property="borrowApr" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="DECIMAL" />
		<result column="company_or_personal" property="companyOrPersonal" jdbcType="VARCHAR" />
		<result column="financePurpose" property="financePurpose" jdbcType="VARCHAR" />
		<result column="borrow_period" property="borrowPeriod" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getPlanBorrowList" resultMap="planBorrowList">


		SELECT DISTINCT *
		FROM(
			(SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hbi.company_or_personal,
				IFNULL(
				hbi.finance_purpose,
				'无借款用途'
				) financePurpose,
				CASE
				WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
				ELSE
				CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
				hb.create_time

			FROM
			ht_borrow hb
			LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
			JOIN ht_hjh_debt_credit ON credit_status IN (0, 1)
			LEFT JOIN ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid
			AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
			WHERE
			ht_hjh_debt_credit.plan_nid_new = #{planNid}
			AND hb.STATUS = 4
			ORDER BY
			hb.create_time ASC
		)
		UNION ALL
			(
			SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				hbi.company_or_personal,
				IFNULL(
				hbi.finance_purpose,
				'无借款用途'
				) financePurpose,
				CASE
				WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
				ELSE
				CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
				hb.create_time
			FROM
				ht_borrow hb
				LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
				LEFT JOIN ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid
				WHERE
				hb.plan_nid = #{planNid}
				AND hb.STATUS = 2
				AND hb.borrow_full_status = 0
				ORDER BY
				hb.create_time ASC
		)
		UNION ALL
		(
		  SELECT
			hb.borrow_nid,
			hb.borrow_user_name,
			hb.borrow_apr,
			hb.account,
			hbi.company_or_personal,
			IFNULL(
			hbi.finance_purpose,
			'无借款用途'
			) financePurpose,
			CASE
			WHEN hb.borrow_style = 'endday' THEN
			CONCAT(hb.borrow_period, '天')
			ELSE
			CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.create_time
		  FROM
			ht_borrow hb
			LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
			LEFT JOIN ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid

			WHERE
			hb.plan_nid = #{planNid}
			AND hb.borrow_full_status = 1
			<if test="startTime != null">
				AND hb.borrow_full_time &gt;= #{startTime}
			</if>
			<if test="endTime != null">
				AND hb.borrow_full_time &lt;= #{endTime}
			</if>
			ORDER BY
			hb.create_time ASC
		)
		UNION ALL
		(
		SELECT
			hb.borrow_nid,
			hb.borrow_user_name,
			hb.borrow_apr,
			hb.account,
			hbi.company_or_personal,
			IFNULL(
			hbi.finance_purpose,
			'无借款用途'
			) financePurpose,
			CASE
			WHEN hb.borrow_style = 'endday' THEN
			CONCAT(hb.borrow_period, '天')
			ELSE
			CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.create_time
		FROM
		ht_borrow hb
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		LEFT JOIN ht_borrow_info hbi on hbi.borrow_nid = hb.borrow_nid
		JOIN ht_hjh_debt_credit ON credit_capital_wait = 0
		<if test="startTime != null">
			AND end_time &gt;= #{startTime}
		</if>
		<if test="endTime != null">
			AND end_time &lt;= #{endTime}
		</if>
		AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
		WHERE
		ht_hjh_debt_credit.plan_nid_new = #{planNid}
		ORDER BY
		hb.create_time ASC
		))t

		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart} , #{limitEnd}
		</if>
	</select>

	<select id="getPlanAccedeTotal" resultType="map">
		SELECT
			COUNT(1) as count ,sum(accede_account) as sum
		FROM
			ht_hjh_accede
			where plan_nid = #{planNid}
	</select>

	<select id="getPlanAccedeList" resultType="com.hyjf.am.vo.trade.hjh.HjhAccedeCustomizeVO"  parameterType="Map">
		SELECT
		dpa.user_id as userId,
		CASE WHEN LENGTH(dpa.user_name)<![CDATA[>]]>1
		THEN
		CONCAT(SUBSTR(dpa.user_name,1,1),'**')
		ELSE
		dpa.user_name
		END userName,
		SUBSTRING(FORMAT(dpa.accede_account,4),1,LENGTH(FORMAT(dpa.accede_account,4))-2) AS accedeAccount,
		dpa.create_time as accedeTime,
		-- IFNULL(hui.vip_id,0) vip_id,
		-- hui.vip_value,
		 dpa.client
		FROM
		ht_hjh_accede dpa
		LEFT JOIN ht_r_user hui ON hui.user_id = dpa.user_id
		-- LEFT JOIN hyjf_param_name hpn ON dpa.client=hpn.name_cd AND hpn.name_class='CLIENT'
		WHERE dpa.plan_nid=#{planNid}
		ORDER BY
		dpa.create_time DESC
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>


	<select id="countPlanBorrowRecordTotal" resultType="java.lang.Integer" parameterType="Map">

		SELECT COUNT(1)
		FROM
		(
				SELECT DISTINCT *
		FROM(
		(SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				-- hb.company_or_personal,

				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.create_time

		FROM
			ht_borrow hb
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		inner JOIN ht_hjh_debt_credit ON credit_status IN (0, 1)
		AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
		WHERE
		ht_hjh_debt_credit.plan_nid_new = #{planNid}
		AND hb.STATUS = 4
	ORDER BY
				hb.create_time ASC
		)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					-- hb.company_or_personal,

					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.create_time
			FROM
				ht_borrow hb
			LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
			WHERE
				hb.plan_nid = #{planNid}
			AND hb.STATUS = 2
			AND hb.borrow_full_status = 0
			ORDER BY
				hb.create_time ASC
			)
		UNION ALL
			(
				SELECT
					hb.borrow_nid,
					hb.borrow_user_name,
					hb.borrow_apr,
					hb.account,
					-- hb.company_or_personal,

					CASE
				WHEN hb.borrow_style = 'endday' THEN
					CONCAT(hb.borrow_period, '天')
				ELSE
					CONCAT(hb.borrow_period, '个月')
				END borrow_period,
				IFNULL(hbs.NAME, '') NAME,
			hb.create_time
		FROM
			ht_borrow hb
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		WHERE
			hb.plan_nid = #{planNid}
		AND hb.borrow_full_status = 1
		AND hb.borrow_full_time &gt;= #{startTime}
		AND hb.borrow_full_time &lt;= #{endTime}
ORDER BY
				hb.create_time ASC
		)
		UNION ALL
			(
			SELECT
				hb.borrow_nid,
				hb.borrow_user_name,
				hb.borrow_apr,
				hb.account,
				-- hb.company_or_personal,

				CASE
			WHEN hb.borrow_style = 'endday' THEN
				CONCAT(hb.borrow_period, '天')
			ELSE
				CONCAT(hb.borrow_period, '个月')
			END borrow_period,
			IFNULL(hbs.NAME, '') NAME,
			hb.create_time
		FROM
			ht_borrow hb
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		inner JOIN ht_hjh_debt_credit ON credit_capital_wait = 0
		AND end_time &gt;= #{startTime}
		AND end_time &lt;= #{endTime}
		AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
		WHERE
			ht_hjh_debt_credit.plan_nid_new = #{planNid}
			ORDER BY
				hb.create_time ASC
		))t
		) AS t

	</select>


	<resultMap id="PlanBorrowMap" type="com.hyjf.am.trade.dao.model.customize.DebtPlanBorrowCustomize">
		<id column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
		<result column="name" property="borrowStyleName" jdbcType="VARCHAR" />
		<result column="borrow_apr" property="borrowApr" jdbcType="VARCHAR" />
		<result column="company_or_personal" property="companyOrPersonal" jdbcType="VARCHAR" />
		<result column="borrow_user_name" property="borrowUserName" jdbcType="VARCHAR" />
		<result column="borrow_period" property="borrowPeriod" jdbcType="VARCHAR" />
		<result column="account" property="borrowAmount" jdbcType="VARCHAR" />
		<result column="financePurpose" property="borrowPurpose" jdbcType="VARCHAR" />
	</resultMap>


	<select id="selectPlanBorrowList" resultMap="PlanBorrowMap" parameterType="Map">
		SELECT DISTINCT *
		FROM(
		(SELECT
		hb.borrow_nid,
		hb.borrow_user_name,
		hb.borrow_apr,
		hb.account,
		hbi.company_or_personal,
		IFNULL(
		hbi.finance_purpose,
		'无借款用途'
		) financePurpose,
		CASE
		WHEN hb.borrow_style = 'endday' THEN
		CONCAT(hb.borrow_period, '天')
		ELSE
		CONCAT(hb.borrow_period, '个月')
		END borrow_period,
		IFNULL(hbs.NAME, '') NAME,
		hb.create_time
		FROM
		ht_borrow hb inner join ht_borrow_info hbi on hb.borrow_nid = hbi.borrow_nid
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		inner JOIN ht_hjh_debt_credit ON credit_status IN (0, 1)
		AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
		WHERE
		ht_hjh_debt_credit.plan_nid_new = #{planNid}
		AND hb.STATUS = 4
		ORDER BY
		hb.create_time ASC
		)
		UNION ALL
		(
		SELECT
		hb.borrow_nid,
		hb.borrow_user_name,
		hb.borrow_apr,
		hb.account,
		hbi.company_or_personal,
		IFNULL(
		hbi.finance_purpose,
		'无借款用途'
		) financePurpose,
		CASE
		WHEN hb.borrow_style = 'endday' THEN
		CONCAT(hb.borrow_period, '天')
		ELSE
		CONCAT(hb.borrow_period, '个月')
		END borrow_period,
		IFNULL(hbs.NAME, '') NAME,
		hb.create_time
		FROM
		ht_borrow hb inner join ht_borrow_info hbi on hb.borrow_nid = hbi.borrow_nid
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		WHERE
		hb.plan_nid = #{planNid}
		AND hb.STATUS = 2
		AND hb.borrow_full_status = 0
		ORDER BY
		hb.create_time ASC
		)
		UNION ALL
		(
		SELECT
		hb.borrow_nid,
		hb.borrow_user_name,
		hb.borrow_apr,
		hb.account,
		hbi.company_or_personal,
		IFNULL(
		hbi.finance_purpose,
		'无借款用途'
		) financePurpose,
		CASE
		WHEN hb.borrow_style = 'endday' THEN
		CONCAT(hb.borrow_period, '天')
		ELSE
		CONCAT(hb.borrow_period, '个月')
		END borrow_period,
		IFNULL(hbs.NAME, '') NAME,
		hb.create_time
		FROM
		ht_borrow hb inner join ht_borrow_info hbi ON hb.borrow_nid = hbi.borrow_nid
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		WHERE
		hb.plan_nid = #{planNid}
		AND hb.borrow_full_status = 1
		AND hb.borrow_full_time &gt;= #{startTime}
		AND hb.borrow_full_time &lt;= #{endTime}
		ORDER BY
		hb.create_time ASC
		)
		UNION ALL
		(
		SELECT
		hb.borrow_nid,
		hb.borrow_user_name,
		hb.borrow_apr,
		hb.account,
		hbi.company_or_personal,
		IFNULL(
		hbi.finance_purpose,
		'无借款用途'
		) financePurpose,
		CASE
		WHEN hb.borrow_style = 'endday' THEN
		CONCAT(hb.borrow_period, '天')
		ELSE
		CONCAT(hb.borrow_period, '个月')
		END borrow_period,
		IFNULL(hbs.NAME, '') NAME,
		hb.create_time
		FROM
		ht_borrow hb inner join ht_borrow_info hbi on hb.borrow_nid = hbi.borrow_nid
		LEFT JOIN ht_borrow_style hbs ON hbs.nid = hb.borrow_style
		inner JOIN ht_hjh_debt_credit ON credit_capital_wait = 0
		AND end_time &gt;= #{startTime}
		AND end_time &lt;= #{endTime}
		AND hb.borrow_nid = ht_hjh_debt_credit.borrow_nid
		WHERE
		ht_hjh_debt_credit.plan_nid_new = #{planNid}
		ORDER BY
		hb.create_time ASC
		))t
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart} , #{limitEnd}
		</if>
	</select>


	<select id="selectPlanAccedeSum" resultType="java.lang.Long" parameterType="Map">
		SELECT
			sum(accede_account) accedeSum
		FROM
			ht_hjh_accede
		WHERE plan_nid=#{planNid}
	</select>


	<resultMap id="DebtPlanAccedeMap" type="com.hyjf.am.trade.dao.model.customize.DebtPlanAccedeCustomize">
		<id column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="accede_account" property="accedeAccount" jdbcType="VARCHAR" />
		<result column="create_time" property="accedeTime" jdbcType="VARCHAR" />
		<result column="client" property="client" jdbcType="INTEGER" />
	</resultMap>
	<select id="selectPlanAccedeList" resultMap="DebtPlanAccedeMap" parameterType="Map">
		SELECT
		dpa.user_id,
		CASE WHEN LENGTH(dpa.user_name)<![CDATA[>]]>1
		THEN
		CONCAT(SUBSTR(dpa.user_name,1,1),'**')
		ELSE
		dpa.user_name
		END user_name,
		SUBSTRING(FORMAT(dpa.accede_account,4),1,LENGTH(FORMAT(dpa.accede_account,4))-2) AS accede_account,
		FROM_UNIXTIME(
		dpa.create_time,
		'%Y-%m-%d %H:%i:%s'
		) AS create_time,
		dpa.client
		FROM
		ht_hjh_accede dpa
		WHERE dpa.plan_nid=#{planNid}
		ORDER BY
		dpa.create_time DESC
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="searchPlanStatisticData" resultType="map" >
				SELECT
			count(hha.id) + (
				SELECT
					count(dpa.id) AS total_record
				FROM
					ht_debt_plan_accede dpa
			) AS accede_times,

				(IFNULL(sum(hha.accede_account), 0) + (
					SELECT
						IFNULL(sum(dpa.accede_account), 0)
					FROM
						ht_debt_plan_accede dpa
				))/10000
			 AS accede_account_total,

				(IFNULL(
					sum(hha.received_interest),
					0
				) + (
					SELECT
						IFNULL(
							sum(dpa.repay_interest_yes),
							0
						)
					FROM
						ht_debt_plan_accede dpa
				))/10000
				 AS interest_total
		FROM
			ht_hjh_accede hha

	</select>

	<resultMap id="userHjhInvistListMap" type="com.hyjf.am.vo.trade.hjh.UserHjhInvistListCustomizeVO">
		<result column="nid" property="nid" jdbcType="VARCHAR" />
		<result column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="accede_order_id" property="accedeOrderId" jdbcType="VARCHAR" />
		<result column="borrow_period" property="borrowPeriod" jdbcType="VARCHAR" />
		<result column="addtime" property="addTime" jdbcType="VARCHAR" />
		<result column="recover_time" property="recoverTime" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />

		<result column="credit_nid" property="creditNid" jdbcType="VARCHAR" />
		<result column="invest_order_id" property="investOrderId" jdbcType="VARCHAR" />
		<result column="assign_order_id" property="assignOrderId" jdbcType="VARCHAR" />

	</resultMap>


	<select id="getUserHjhInvestList" resultMap="userHjhInvistListMap" parameterType="Map">
		(
		SELECT
		hhdc.assign_order_id AS nid,
		hhdc.borrow_nid borrow_nid,
		hhdc.credit_nid credit_nid,
		hhdc.invest_order_id invest_order_id,
		hhdc.assign_order_id assign_order_id,

		hhdc.assign_pay account,

		hhdc.assign_plan_order_id accede_order_id,
		CASE
		WHEN hb.borrow_style = 'endday' THEN
		CONCAT(hb.borrow_period, '天')
		ELSE
		CONCAT(hb.borrow_period, '个月')
		END AS borrow_period,
		hhdc.create_time as addtime,

		CASE
		WHEN hhdc.assign_repay_next_time = 0 THEN
		IFNULL(FROM_UNIXTIME( hhdc.assign_repay_end_time, '%Y-%m-%d' ), '--')
		ELSE
		IFNULL(FROM_UNIXTIME( hhdc.assign_repay_next_time, '%Y-%m-%d' ), '--')
		END recover_time,

		1 type
		FROM ht_hjh_debt_credit_tender hhdc
		LEFT JOIN ht_borrow hb ON hhdc.borrow_nid = hb.borrow_nid
		WHERE hhdc.assign_plan_order_id = #{accedeOrderId}
		)

		UNION ALL

		(
		SELECT
		hbt.nid nid,
		hbt.borrow_nid borrow_nid,
		0 AS credit_nid,
		0 AS invest_order_id,
		0 AS assign_order_id,
		hbt.account account,
		hbt.accede_order_id accede_order_id,
		CASE
		WHEN hb.borrow_style = 'endday' THEN CONCAT(hb.borrow_period, '天')
		ELSE CONCAT(hb.borrow_period, '个月')
		END AS borrow_period,
		hbt.create_tiem as addtime,

		CASE
		WHEN hb.borrow_style = 'endday' or hb.borrow_style = 'end' or hb.borrow_style = 'endmonth'
		THEN
		CASE
		WHEN hbr.recover_status = 1 THEN
		IFNULL(FROM_UNIXTIME( hbr.recover_yestime, '%Y-%m-%d' ), '--')
		ELSE
		IFNULL(FROM_UNIXTIME( hbr.recover_time, '%Y-%m-%d' ), '--')
		END
		ELSE
		CASE WHEN hbrp.recover_status = 1 THEN
		IFNULL(FROM_UNIXTIME(hbrp.recover_yestime,'%Y-%m-%d'), '--')
		ELSE
		IFNULL(FROM_UNIXTIME(hbrp.recover_time,'%Y-%m-%d'), '--')
		END
		END AS recover_time,
		0 type
		FROM
		ht_borrow_tender hbt
		LEFT JOIN ht_borrow hb ON hbt.borrow_nid = hb.borrow_nid
		LEFT JOIN ht_borrow_recover hbr ON hbt.nid = hbr.nid

		LEFT JOIN ht_borrow_recover_plan hbrp ON hbt.nid = hbrp.nid
		AND hbrp.borrow_nid = hb.borrow_nid
		AND hbrp.recover_period = hb.borrow_period
		WHERE
		hb.`status` in (3,4,5)
		AND
		hbt.accede_order_id = #{accedeOrderId}
		)
		<if test="limitStart != null and limitEnd !=null" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>

</mapper>