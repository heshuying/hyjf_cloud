<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.DebtApicronMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.DebtApicron" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nid" property="nid" jdbcType="VARCHAR" />
    <result column="plan_nid" property="planNid" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
    <result column="period_now" property="periodNow" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="api_type" property="apiType" jdbcType="TINYINT" />
    <result column="web_status" property="webStatus" jdbcType="TINYINT" />
    <result column="repay_status" property="repayStatus" jdbcType="TINYINT" />
    <result column="credit_repay_status" property="creditRepayStatus" jdbcType="TINYINT" />
    <result column="liquidates_status" property="liquidatesStatus" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hyjf.am.trade.dao.model.auto.DebtApicron" extends="BaseResultMap" >
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, nid, plan_nid, user_id, user_name, borrow_nid, period_now, `status`, api_type, 
    web_status, repay_status, credit_repay_status, liquidates_status, create_user_id, 
    create_user_name, update_user_id, update_user_name, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    `data`
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicronExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ht_debt_apicron
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicronExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_debt_apicron
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ht_debt_apicron
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_debt_apicron
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicronExample" >
    delete from ht_debt_apicron
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicron" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_debt_apicron (nid, plan_nid, user_id, 
      user_name, borrow_nid, period_now, 
      `status`, api_type, web_status, 
      repay_status, credit_repay_status, liquidates_status, 
      create_user_id, create_user_name, update_user_id, 
      update_user_name, create_time, update_time, 
      `data`)
    values (#{nid,jdbcType=VARCHAR}, #{planNid,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{borrowNid,jdbcType=VARCHAR}, #{periodNow,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{apiType,jdbcType=TINYINT}, #{webStatus,jdbcType=TINYINT}, 
      #{repayStatus,jdbcType=TINYINT}, #{creditRepayStatus,jdbcType=TINYINT}, #{liquidatesStatus,jdbcType=TINYINT}, 
      #{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, #{updateUserId,jdbcType=INTEGER}, 
      #{updateUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicron" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_debt_apicron
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        nid,
      </if>
      <if test="planNid != null" >
        plan_nid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="borrowNid != null" >
        borrow_nid,
      </if>
      <if test="periodNow != null" >
        period_now,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="apiType != null" >
        api_type,
      </if>
      <if test="webStatus != null" >
        web_status,
      </if>
      <if test="repayStatus != null" >
        repay_status,
      </if>
      <if test="creditRepayStatus != null" >
        credit_repay_status,
      </if>
      <if test="liquidatesStatus != null" >
        liquidates_status,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="data != null" >
        `data`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        #{nid,jdbcType=VARCHAR},
      </if>
      <if test="planNid != null" >
        #{planNid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="periodNow != null" >
        #{periodNow,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="apiType != null" >
        #{apiType,jdbcType=TINYINT},
      </if>
      <if test="webStatus != null" >
        #{webStatus,jdbcType=TINYINT},
      </if>
      <if test="repayStatus != null" >
        #{repayStatus,jdbcType=TINYINT},
      </if>
      <if test="creditRepayStatus != null" >
        #{creditRepayStatus,jdbcType=TINYINT},
      </if>
      <if test="liquidatesStatus != null" >
        #{liquidatesStatus,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicronExample" resultType="java.lang.Integer" >
    select count(*) from ht_debt_apicron
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_debt_apicron
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nid != null" >
        nid = #{record.nid,jdbcType=VARCHAR},
      </if>
      <if test="record.planNid != null" >
        plan_nid = #{record.planNid,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowNid != null" >
        borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="record.periodNow != null" >
        period_now = #{record.periodNow,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.apiType != null" >
        api_type = #{record.apiType,jdbcType=TINYINT},
      </if>
      <if test="record.webStatus != null" >
        web_status = #{record.webStatus,jdbcType=TINYINT},
      </if>
      <if test="record.repayStatus != null" >
        repay_status = #{record.repayStatus,jdbcType=TINYINT},
      </if>
      <if test="record.creditRepayStatus != null" >
        credit_repay_status = #{record.creditRepayStatus,jdbcType=TINYINT},
      </if>
      <if test="record.liquidatesStatus != null" >
        liquidates_status = #{record.liquidatesStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserName != null" >
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.data != null" >
        `data` = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ht_debt_apicron
    set id = #{record.id,jdbcType=INTEGER},
      nid = #{record.nid,jdbcType=VARCHAR},
      plan_nid = #{record.planNid,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      period_now = #{record.periodNow,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      api_type = #{record.apiType,jdbcType=TINYINT},
      web_status = #{record.webStatus,jdbcType=TINYINT},
      repay_status = #{record.repayStatus,jdbcType=TINYINT},
      credit_repay_status = #{record.creditRepayStatus,jdbcType=TINYINT},
      liquidates_status = #{record.liquidatesStatus,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      `data` = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_debt_apicron
    set id = #{record.id,jdbcType=INTEGER},
      nid = #{record.nid,jdbcType=VARCHAR},
      plan_nid = #{record.planNid,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      period_now = #{record.periodNow,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      api_type = #{record.apiType,jdbcType=TINYINT},
      web_status = #{record.webStatus,jdbcType=TINYINT},
      repay_status = #{record.repayStatus,jdbcType=TINYINT},
      credit_repay_status = #{record.creditRepayStatus,jdbcType=TINYINT},
      liquidates_status = #{record.liquidatesStatus,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicron" >
    update ht_debt_apicron
    <set >
      <if test="nid != null" >
        nid = #{nid,jdbcType=VARCHAR},
      </if>
      <if test="planNid != null" >
        plan_nid = #{planNid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="periodNow != null" >
        period_now = #{periodNow,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="apiType != null" >
        api_type = #{apiType,jdbcType=TINYINT},
      </if>
      <if test="webStatus != null" >
        web_status = #{webStatus,jdbcType=TINYINT},
      </if>
      <if test="repayStatus != null" >
        repay_status = #{repayStatus,jdbcType=TINYINT},
      </if>
      <if test="creditRepayStatus != null" >
        credit_repay_status = #{creditRepayStatus,jdbcType=TINYINT},
      </if>
      <if test="liquidatesStatus != null" >
        liquidates_status = #{liquidatesStatus,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="data != null" >
        `data` = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicron" >
    update ht_debt_apicron
    set nid = #{nid,jdbcType=VARCHAR},
      plan_nid = #{planNid,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      period_now = #{periodNow,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      api_type = #{apiType,jdbcType=TINYINT},
      web_status = #{webStatus,jdbcType=TINYINT},
      repay_status = #{repayStatus,jdbcType=TINYINT},
      credit_repay_status = #{creditRepayStatus,jdbcType=TINYINT},
      liquidates_status = #{liquidatesStatus,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `data` = #{data,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.DebtApicron" >
    update ht_debt_apicron
    set nid = #{nid,jdbcType=VARCHAR},
      plan_nid = #{planNid,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      period_now = #{periodNow,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      api_type = #{apiType,jdbcType=TINYINT},
      web_status = #{webStatus,jdbcType=TINYINT},
      repay_status = #{repayStatus,jdbcType=TINYINT},
      credit_repay_status = #{creditRepayStatus,jdbcType=TINYINT},
      liquidates_status = #{liquidatesStatus,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>