<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.DebtInvestLogMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.DebtInvestLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_attribute" property="userAttribute" jdbcType="INTEGER" />
    <result column="plan_nid" property="planNid" jdbcType="VARCHAR" />
    <result column="plan_order_id" property="planOrderId" jdbcType="VARCHAR" />
    <result column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="DECIMAL" />
    <result column="invest_type" property="investType" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="client" property="client" jdbcType="TINYINT" />
    <result column="add_ip" property="addIp" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_name, user_attribute, plan_nid, plan_order_id, borrow_nid, order_id, 
    account, invest_type, `status`, client, add_ip, remark, create_time, create_user_id, 
    create_user_name, update_time, update_user_id, update_user_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.DebtInvestLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_debt_invest_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_debt_invest_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_debt_invest_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.DebtInvestLogExample" >
    delete from ht_debt_invest_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.DebtInvestLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_debt_invest_log (user_id, user_name, user_attribute, 
      plan_nid, plan_order_id, borrow_nid, 
      order_id, account, invest_type, 
      `status`, client, add_ip, 
      remark, create_time, create_user_id, 
      create_user_name, update_time, update_user_id, 
      update_user_name)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userAttribute,jdbcType=INTEGER}, 
      #{planNid,jdbcType=VARCHAR}, #{planOrderId,jdbcType=VARCHAR}, #{borrowNid,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{account,jdbcType=DECIMAL}, #{investType,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{client,jdbcType=TINYINT}, #{addIp,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, 
      #{createUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, 
      #{updateUserName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.DebtInvestLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_debt_invest_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userAttribute != null" >
        user_attribute,
      </if>
      <if test="planNid != null" >
        plan_nid,
      </if>
      <if test="planOrderId != null" >
        plan_order_id,
      </if>
      <if test="borrowNid != null" >
        borrow_nid,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="investType != null" >
        invest_type,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="client != null" >
        client,
      </if>
      <if test="addIp != null" >
        add_ip,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAttribute != null" >
        #{userAttribute,jdbcType=INTEGER},
      </if>
      <if test="planNid != null" >
        #{planNid,jdbcType=VARCHAR},
      </if>
      <if test="planOrderId != null" >
        #{planOrderId,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DECIMAL},
      </if>
      <if test="investType != null" >
        #{investType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="client != null" >
        #{client,jdbcType=TINYINT},
      </if>
      <if test="addIp != null" >
        #{addIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.DebtInvestLogExample" resultType="java.lang.Integer" >
    select count(*) from ht_debt_invest_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_debt_invest_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userAttribute != null" >
        user_attribute = #{record.userAttribute,jdbcType=INTEGER},
      </if>
      <if test="record.planNid != null" >
        plan_nid = #{record.planNid,jdbcType=VARCHAR},
      </if>
      <if test="record.planOrderId != null" >
        plan_order_id = #{record.planOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowNid != null" >
        borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=DECIMAL},
      </if>
      <if test="record.investType != null" >
        invest_type = #{record.investType,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.client != null" >
        client = #{record.client,jdbcType=TINYINT},
      </if>
      <if test="record.addIp != null" >
        add_ip = #{record.addIp,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserName != null" >
        update_user_name = #{record.updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_debt_invest_log
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_attribute = #{record.userAttribute,jdbcType=INTEGER},
      plan_nid = #{record.planNid,jdbcType=VARCHAR},
      plan_order_id = #{record.planOrderId,jdbcType=VARCHAR},
      borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=DECIMAL},
      invest_type = #{record.investType,jdbcType=TINYINT},
      `status` = #{record.status,jdbcType=TINYINT},
      client = #{record.client,jdbcType=TINYINT},
      add_ip = #{record.addIp,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_user_name = #{record.updateUserName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.DebtInvestLog" >
    update ht_debt_invest_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userAttribute != null" >
        user_attribute = #{userAttribute,jdbcType=INTEGER},
      </if>
      <if test="planNid != null" >
        plan_nid = #{planNid,jdbcType=VARCHAR},
      </if>
      <if test="planOrderId != null" >
        plan_order_id = #{planOrderId,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DECIMAL},
      </if>
      <if test="investType != null" >
        invest_type = #{investType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="client != null" >
        client = #{client,jdbcType=TINYINT},
      </if>
      <if test="addIp != null" >
        add_ip = #{addIp,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.DebtInvestLog" >
    update ht_debt_invest_log
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_attribute = #{userAttribute,jdbcType=INTEGER},
      plan_nid = #{planNid,jdbcType=VARCHAR},
      plan_order_id = #{planOrderId,jdbcType=VARCHAR},
      borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      account = #{account,jdbcType=DECIMAL},
      invest_type = #{investType,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      client = #{client,jdbcType=TINYINT},
      add_ip = #{addIp,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_user_name = #{updateUserName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>