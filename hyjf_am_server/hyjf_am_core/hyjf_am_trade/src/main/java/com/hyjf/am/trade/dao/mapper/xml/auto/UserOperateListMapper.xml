<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.UserOperateListMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.UserOperateList" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="current_owner" property="currentOwner" jdbcType="VARCHAR" />
    <result column="customer_group" property="customerGroup" jdbcType="TINYINT" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="year_money" property="yearMoney" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="operating" property="operating" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_name, current_owner, customer_group, money, year_money, balance, 
    operating, `status`, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.UserOperateListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_user_operate_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_user_operate_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_user_operate_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.UserOperateListExample" >
    delete from ht_user_operate_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.UserOperateList" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_user_operate_list (user_id, user_name, current_owner, 
      customer_group, money, year_money, 
      balance, operating, `status`, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{currentOwner,jdbcType=VARCHAR}, 
      #{customerGroup,jdbcType=TINYINT}, #{money,jdbcType=DECIMAL}, #{yearMoney,jdbcType=DECIMAL}, 
      #{balance,jdbcType=DECIMAL}, #{operating,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.UserOperateList" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_user_operate_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="currentOwner != null" >
        current_owner,
      </if>
      <if test="customerGroup != null" >
        customer_group,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="yearMoney != null" >
        year_money,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="operating != null" >
        operating,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="currentOwner != null" >
        #{currentOwner,jdbcType=VARCHAR},
      </if>
      <if test="customerGroup != null" >
        #{customerGroup,jdbcType=TINYINT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="yearMoney != null" >
        #{yearMoney,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="operating != null" >
        #{operating,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.UserOperateListExample" resultType="java.lang.Integer" >
    select count(*) from ht_user_operate_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_user_operate_list
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.currentOwner != null" >
        current_owner = #{record.currentOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.customerGroup != null" >
        customer_group = #{record.customerGroup,jdbcType=TINYINT},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.yearMoney != null" >
        year_money = #{record.yearMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.operating != null" >
        operating = #{record.operating,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_user_operate_list
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      current_owner = #{record.currentOwner,jdbcType=VARCHAR},
      customer_group = #{record.customerGroup,jdbcType=TINYINT},
      money = #{record.money,jdbcType=DECIMAL},
      year_money = #{record.yearMoney,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      operating = #{record.operating,jdbcType=TINYINT},
      `status` = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.UserOperateList" >
    update ht_user_operate_list
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="currentOwner != null" >
        current_owner = #{currentOwner,jdbcType=VARCHAR},
      </if>
      <if test="customerGroup != null" >
        customer_group = #{customerGroup,jdbcType=TINYINT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="yearMoney != null" >
        year_money = #{yearMoney,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="operating != null" >
        operating = #{operating,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.UserOperateList" >
    update ht_user_operate_list
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      current_owner = #{currentOwner,jdbcType=VARCHAR},
      customer_group = #{customerGroup,jdbcType=TINYINT},
      money = #{money,jdbcType=DECIMAL},
      year_money = #{yearMoney,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      operating = #{operating,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>