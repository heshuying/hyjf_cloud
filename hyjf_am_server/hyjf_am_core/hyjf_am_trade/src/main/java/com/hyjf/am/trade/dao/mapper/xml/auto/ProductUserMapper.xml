<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.ProductUserMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.ProductUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="DECIMAL" />
    <result column="valid_days" property="validDays" jdbcType="INTEGER" />
    <result column="redeemed" property="redeemed" jdbcType="DECIMAL" />
    <result column="rest_amount" property="restAmount" jdbcType="DECIMAL" />
    <result column="interest" property="interest" jdbcType="DECIMAL" />
    <result column="rest_amount_check" property="restAmountCheck" jdbcType="DECIMAL" />
    <result column="redeemed_check" property="redeemedCheck" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, username, total, valid_days, redeemed, rest_amount, interest, rest_amount_check, 
    redeemed_check, `status`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.ProductUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_product_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_product_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_product_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.ProductUserExample" >
    delete from ht_product_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.ProductUser" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_product_user (user_id, username, total, 
      valid_days, redeemed, rest_amount, 
      interest, rest_amount_check, redeemed_check, 
      `status`)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{total,jdbcType=DECIMAL}, 
      #{validDays,jdbcType=INTEGER}, #{redeemed,jdbcType=DECIMAL}, #{restAmount,jdbcType=DECIMAL}, 
      #{interest,jdbcType=DECIMAL}, #{restAmountCheck,jdbcType=DECIMAL}, #{redeemedCheck,jdbcType=DECIMAL}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.ProductUser" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_product_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="validDays != null" >
        valid_days,
      </if>
      <if test="redeemed != null" >
        redeemed,
      </if>
      <if test="restAmount != null" >
        rest_amount,
      </if>
      <if test="interest != null" >
        interest,
      </if>
      <if test="restAmountCheck != null" >
        rest_amount_check,
      </if>
      <if test="redeemedCheck != null" >
        redeemed_check,
      </if>
      <if test="status != null" >
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="validDays != null" >
        #{validDays,jdbcType=INTEGER},
      </if>
      <if test="redeemed != null" >
        #{redeemed,jdbcType=DECIMAL},
      </if>
      <if test="restAmount != null" >
        #{restAmount,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        #{interest,jdbcType=DECIMAL},
      </if>
      <if test="restAmountCheck != null" >
        #{restAmountCheck,jdbcType=DECIMAL},
      </if>
      <if test="redeemedCheck != null" >
        #{redeemedCheck,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.ProductUserExample" resultType="java.lang.Integer" >
    select count(*) from ht_product_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_product_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.validDays != null" >
        valid_days = #{record.validDays,jdbcType=INTEGER},
      </if>
      <if test="record.redeemed != null" >
        redeemed = #{record.redeemed,jdbcType=DECIMAL},
      </if>
      <if test="record.restAmount != null" >
        rest_amount = #{record.restAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.interest != null" >
        interest = #{record.interest,jdbcType=DECIMAL},
      </if>
      <if test="record.restAmountCheck != null" >
        rest_amount_check = #{record.restAmountCheck,jdbcType=DECIMAL},
      </if>
      <if test="record.redeemedCheck != null" >
        redeemed_check = #{record.redeemedCheck,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_product_user
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DECIMAL},
      valid_days = #{record.validDays,jdbcType=INTEGER},
      redeemed = #{record.redeemed,jdbcType=DECIMAL},
      rest_amount = #{record.restAmount,jdbcType=DECIMAL},
      interest = #{record.interest,jdbcType=DECIMAL},
      rest_amount_check = #{record.restAmountCheck,jdbcType=DECIMAL},
      redeemed_check = #{record.redeemedCheck,jdbcType=DECIMAL},
      `status` = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.ProductUser" >
    update ht_product_user
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="validDays != null" >
        valid_days = #{validDays,jdbcType=INTEGER},
      </if>
      <if test="redeemed != null" >
        redeemed = #{redeemed,jdbcType=DECIMAL},
      </if>
      <if test="restAmount != null" >
        rest_amount = #{restAmount,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        interest = #{interest,jdbcType=DECIMAL},
      </if>
      <if test="restAmountCheck != null" >
        rest_amount_check = #{restAmountCheck,jdbcType=DECIMAL},
      </if>
      <if test="redeemedCheck != null" >
        redeemed_check = #{redeemedCheck,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.ProductUser" >
    update ht_product_user
    set user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      total = #{total,jdbcType=DECIMAL},
      valid_days = #{validDays,jdbcType=INTEGER},
      redeemed = #{redeemed,jdbcType=DECIMAL},
      rest_amount = #{restAmount,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      rest_amount_check = #{restAmountCheck,jdbcType=DECIMAL},
      redeemed_check = #{redeemedCheck,jdbcType=DECIMAL},
      `status` = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>