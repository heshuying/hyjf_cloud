<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.AccountBorrowMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.AccountBorrow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nid" property="nid" jdbcType="VARCHAR" />
    <result column="borrow_nid" property="borrowNid" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="interest" property="interest" jdbcType="DECIMAL" />
    <result column="manage_fee" property="manageFee" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, nid, borrow_nid, user_id, `status`, money, fee, balance, interest, manage_fee, 
    remark, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.AccountBorrowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_account_borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_account_borrow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_account_borrow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.AccountBorrowExample" >
    delete from ht_account_borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.AccountBorrow" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_account_borrow (nid, borrow_nid, user_id, 
      `status`, money, fee, 
      balance, interest, manage_fee, 
      remark, create_time, update_time
      )
    values (#{nid,jdbcType=VARCHAR}, #{borrowNid,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{money,jdbcType=DECIMAL}, #{fee,jdbcType=DECIMAL}, 
      #{balance,jdbcType=DECIMAL}, #{interest,jdbcType=DECIMAL}, #{manageFee,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.AccountBorrow" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_account_borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        nid,
      </if>
      <if test="borrowNid != null" >
        borrow_nid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="interest != null" >
        interest,
      </if>
      <if test="manageFee != null" >
        manage_fee,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nid != null" >
        #{nid,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        #{interest,jdbcType=DECIMAL},
      </if>
      <if test="manageFee != null" >
        #{manageFee,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.AccountBorrowExample" resultType="java.lang.Integer" >
    select count(*) from ht_account_borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_account_borrow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nid != null" >
        nid = #{record.nid,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowNid != null" >
        borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.fee != null" >
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.interest != null" >
        interest = #{record.interest,jdbcType=DECIMAL},
      </if>
      <if test="record.manageFee != null" >
        manage_fee = #{record.manageFee,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_account_borrow
    set id = #{record.id,jdbcType=INTEGER},
      nid = #{record.nid,jdbcType=VARCHAR},
      borrow_nid = #{record.borrowNid,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      money = #{record.money,jdbcType=DECIMAL},
      fee = #{record.fee,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      interest = #{record.interest,jdbcType=DECIMAL},
      manage_fee = #{record.manageFee,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.AccountBorrow" >
    update ht_account_borrow
    <set >
      <if test="nid != null" >
        nid = #{nid,jdbcType=VARCHAR},
      </if>
      <if test="borrowNid != null" >
        borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        interest = #{interest,jdbcType=DECIMAL},
      </if>
      <if test="manageFee != null" >
        manage_fee = #{manageFee,jdbcType=DECIMAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.AccountBorrow" >
    update ht_account_borrow
    set nid = #{nid,jdbcType=VARCHAR},
      borrow_nid = #{borrowNid,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      money = #{money,jdbcType=DECIMAL},
      fee = #{fee,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      manage_fee = #{manageFee,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>