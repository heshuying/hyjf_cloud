<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.NifaContractTemplateMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.NifaContractTemplate" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="templet_nid" property="templetNid" jdbcType="VARCHAR" />
    <result column="normal_definition" property="normalDefinition" jdbcType="VARCHAR" />
    <result column="prepayment_definition" property="prepaymentDefinition" jdbcType="VARCHAR" />
    <result column="borrower_promises" property="borrowerPromises" jdbcType="VARCHAR" />
    <result column="lender_promises" property="lenderPromises" jdbcType="VARCHAR" />
    <result column="borrower_obligation" property="borrowerObligation" jdbcType="VARCHAR" />
    <result column="confidentiality" property="confidentiality" jdbcType="VARCHAR" />
    <result column="breach_contract" property="breachContract" jdbcType="VARCHAR" />
    <result column="applicable_law" property="applicableLaw" jdbcType="VARCHAR" />
    <result column="dispute_resolution" property="disputeResolution" jdbcType="VARCHAR" />
    <result column="other_conditions" property="otherConditions" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, templet_nid, normal_definition, prepayment_definition, borrower_promises, lender_promises, 
    borrower_obligation, confidentiality, breach_contract, applicable_law, dispute_resolution, 
    other_conditions, create_user_id, update_user_id, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.NifaContractTemplateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_nifa_contract_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_nifa_contract_template
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_nifa_contract_template
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.NifaContractTemplateExample" >
    delete from ht_nifa_contract_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.NifaContractTemplate" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_nifa_contract_template (templet_nid, normal_definition, prepayment_definition, 
      borrower_promises, lender_promises, borrower_obligation, 
      confidentiality, breach_contract, applicable_law, 
      dispute_resolution, other_conditions, create_user_id, 
      update_user_id, create_time, update_time
      )
    values (#{templetNid,jdbcType=VARCHAR}, #{normalDefinition,jdbcType=VARCHAR}, #{prepaymentDefinition,jdbcType=VARCHAR}, 
      #{borrowerPromises,jdbcType=VARCHAR}, #{lenderPromises,jdbcType=VARCHAR}, #{borrowerObligation,jdbcType=VARCHAR}, 
      #{confidentiality,jdbcType=VARCHAR}, #{breachContract,jdbcType=VARCHAR}, #{applicableLaw,jdbcType=VARCHAR}, 
      #{disputeResolution,jdbcType=VARCHAR}, #{otherConditions,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.NifaContractTemplate" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_nifa_contract_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="templetNid != null" >
        templet_nid,
      </if>
      <if test="normalDefinition != null" >
        normal_definition,
      </if>
      <if test="prepaymentDefinition != null" >
        prepayment_definition,
      </if>
      <if test="borrowerPromises != null" >
        borrower_promises,
      </if>
      <if test="lenderPromises != null" >
        lender_promises,
      </if>
      <if test="borrowerObligation != null" >
        borrower_obligation,
      </if>
      <if test="confidentiality != null" >
        confidentiality,
      </if>
      <if test="breachContract != null" >
        breach_contract,
      </if>
      <if test="applicableLaw != null" >
        applicable_law,
      </if>
      <if test="disputeResolution != null" >
        dispute_resolution,
      </if>
      <if test="otherConditions != null" >
        other_conditions,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="templetNid != null" >
        #{templetNid,jdbcType=VARCHAR},
      </if>
      <if test="normalDefinition != null" >
        #{normalDefinition,jdbcType=VARCHAR},
      </if>
      <if test="prepaymentDefinition != null" >
        #{prepaymentDefinition,jdbcType=VARCHAR},
      </if>
      <if test="borrowerPromises != null" >
        #{borrowerPromises,jdbcType=VARCHAR},
      </if>
      <if test="lenderPromises != null" >
        #{lenderPromises,jdbcType=VARCHAR},
      </if>
      <if test="borrowerObligation != null" >
        #{borrowerObligation,jdbcType=VARCHAR},
      </if>
      <if test="confidentiality != null" >
        #{confidentiality,jdbcType=VARCHAR},
      </if>
      <if test="breachContract != null" >
        #{breachContract,jdbcType=VARCHAR},
      </if>
      <if test="applicableLaw != null" >
        #{applicableLaw,jdbcType=VARCHAR},
      </if>
      <if test="disputeResolution != null" >
        #{disputeResolution,jdbcType=VARCHAR},
      </if>
      <if test="otherConditions != null" >
        #{otherConditions,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.NifaContractTemplateExample" resultType="java.lang.Integer" >
    select count(*) from ht_nifa_contract_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_nifa_contract_template
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.templetNid != null" >
        templet_nid = #{record.templetNid,jdbcType=VARCHAR},
      </if>
      <if test="record.normalDefinition != null" >
        normal_definition = #{record.normalDefinition,jdbcType=VARCHAR},
      </if>
      <if test="record.prepaymentDefinition != null" >
        prepayment_definition = #{record.prepaymentDefinition,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowerPromises != null" >
        borrower_promises = #{record.borrowerPromises,jdbcType=VARCHAR},
      </if>
      <if test="record.lenderPromises != null" >
        lender_promises = #{record.lenderPromises,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowerObligation != null" >
        borrower_obligation = #{record.borrowerObligation,jdbcType=VARCHAR},
      </if>
      <if test="record.confidentiality != null" >
        confidentiality = #{record.confidentiality,jdbcType=VARCHAR},
      </if>
      <if test="record.breachContract != null" >
        breach_contract = #{record.breachContract,jdbcType=VARCHAR},
      </if>
      <if test="record.applicableLaw != null" >
        applicable_law = #{record.applicableLaw,jdbcType=VARCHAR},
      </if>
      <if test="record.disputeResolution != null" >
        dispute_resolution = #{record.disputeResolution,jdbcType=VARCHAR},
      </if>
      <if test="record.otherConditions != null" >
        other_conditions = #{record.otherConditions,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_nifa_contract_template
    set id = #{record.id,jdbcType=INTEGER},
      templet_nid = #{record.templetNid,jdbcType=VARCHAR},
      normal_definition = #{record.normalDefinition,jdbcType=VARCHAR},
      prepayment_definition = #{record.prepaymentDefinition,jdbcType=VARCHAR},
      borrower_promises = #{record.borrowerPromises,jdbcType=VARCHAR},
      lender_promises = #{record.lenderPromises,jdbcType=VARCHAR},
      borrower_obligation = #{record.borrowerObligation,jdbcType=VARCHAR},
      confidentiality = #{record.confidentiality,jdbcType=VARCHAR},
      breach_contract = #{record.breachContract,jdbcType=VARCHAR},
      applicable_law = #{record.applicableLaw,jdbcType=VARCHAR},
      dispute_resolution = #{record.disputeResolution,jdbcType=VARCHAR},
      other_conditions = #{record.otherConditions,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.NifaContractTemplate" >
    update ht_nifa_contract_template
    <set >
      <if test="templetNid != null" >
        templet_nid = #{templetNid,jdbcType=VARCHAR},
      </if>
      <if test="normalDefinition != null" >
        normal_definition = #{normalDefinition,jdbcType=VARCHAR},
      </if>
      <if test="prepaymentDefinition != null" >
        prepayment_definition = #{prepaymentDefinition,jdbcType=VARCHAR},
      </if>
      <if test="borrowerPromises != null" >
        borrower_promises = #{borrowerPromises,jdbcType=VARCHAR},
      </if>
      <if test="lenderPromises != null" >
        lender_promises = #{lenderPromises,jdbcType=VARCHAR},
      </if>
      <if test="borrowerObligation != null" >
        borrower_obligation = #{borrowerObligation,jdbcType=VARCHAR},
      </if>
      <if test="confidentiality != null" >
        confidentiality = #{confidentiality,jdbcType=VARCHAR},
      </if>
      <if test="breachContract != null" >
        breach_contract = #{breachContract,jdbcType=VARCHAR},
      </if>
      <if test="applicableLaw != null" >
        applicable_law = #{applicableLaw,jdbcType=VARCHAR},
      </if>
      <if test="disputeResolution != null" >
        dispute_resolution = #{disputeResolution,jdbcType=VARCHAR},
      </if>
      <if test="otherConditions != null" >
        other_conditions = #{otherConditions,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.NifaContractTemplate" >
    update ht_nifa_contract_template
    set templet_nid = #{templetNid,jdbcType=VARCHAR},
      normal_definition = #{normalDefinition,jdbcType=VARCHAR},
      prepayment_definition = #{prepaymentDefinition,jdbcType=VARCHAR},
      borrower_promises = #{borrowerPromises,jdbcType=VARCHAR},
      lender_promises = #{lenderPromises,jdbcType=VARCHAR},
      borrower_obligation = #{borrowerObligation,jdbcType=VARCHAR},
      confidentiality = #{confidentiality,jdbcType=VARCHAR},
      breach_contract = #{breachContract,jdbcType=VARCHAR},
      applicable_law = #{applicableLaw,jdbcType=VARCHAR},
      dispute_resolution = #{disputeResolution,jdbcType=VARCHAR},
      other_conditions = #{otherConditions,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>