<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.config.dao.mapper.auto.BankConfigMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.config.dao.model.auto.BankConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="app_logo" property="appLogo" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="personal_ebank" property="personalEbank" jdbcType="TINYINT" />
    <result column="enterprise_ebank" property="enterpriseEbank" jdbcType="TINYINT" />
    <result column="quick_payment" property="quickPayment" jdbcType="TINYINT" />
    <result column="immediately_withdraw" property="immediatelyWithdraw" jdbcType="TINYINT" />
    <result column="quick_withdraw" property="quickWithdraw" jdbcType="TINYINT" />
    <result column="normal_withdraw" property="normalWithdraw" jdbcType="TINYINT" />
    <result column="withdraw_defaulttype" property="withdrawDefaulttype" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, `name`, code, app_logo, logo, personal_ebank, enterprise_ebank, quick_payment, 
    immediately_withdraw, quick_withdraw, normal_withdraw, withdraw_defaulttype, `status`, 
    create_user_id, update_user_id, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.config.dao.model.auto.BankConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_bank_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_bank_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_bank_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.config.dao.model.auto.BankConfigExample" >
    delete from ht_bank_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.config.dao.model.auto.BankConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_config (`name`, code, app_logo, 
      logo, personal_ebank, enterprise_ebank, 
      quick_payment, immediately_withdraw, quick_withdraw, 
      normal_withdraw, withdraw_defaulttype, `status`, 
      create_user_id, update_user_id, create_time, 
      update_time)
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{appLogo,jdbcType=VARCHAR}, 
      #{logo,jdbcType=VARCHAR}, #{personalEbank,jdbcType=TINYINT}, #{enterpriseEbank,jdbcType=TINYINT}, 
      #{quickPayment,jdbcType=TINYINT}, #{immediatelyWithdraw,jdbcType=TINYINT}, #{quickWithdraw,jdbcType=TINYINT}, 
      #{normalWithdraw,jdbcType=TINYINT}, #{withdrawDefaulttype,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.config.dao.model.auto.BankConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        `name`,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="appLogo != null" >
        app_logo,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="personalEbank != null" >
        personal_ebank,
      </if>
      <if test="enterpriseEbank != null" >
        enterprise_ebank,
      </if>
      <if test="quickPayment != null" >
        quick_payment,
      </if>
      <if test="immediatelyWithdraw != null" >
        immediately_withdraw,
      </if>
      <if test="quickWithdraw != null" >
        quick_withdraw,
      </if>
      <if test="normalWithdraw != null" >
        normal_withdraw,
      </if>
      <if test="withdrawDefaulttype != null" >
        withdraw_defaulttype,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="appLogo != null" >
        #{appLogo,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="personalEbank != null" >
        #{personalEbank,jdbcType=TINYINT},
      </if>
      <if test="enterpriseEbank != null" >
        #{enterpriseEbank,jdbcType=TINYINT},
      </if>
      <if test="quickPayment != null" >
        #{quickPayment,jdbcType=TINYINT},
      </if>
      <if test="immediatelyWithdraw != null" >
        #{immediatelyWithdraw,jdbcType=TINYINT},
      </if>
      <if test="quickWithdraw != null" >
        #{quickWithdraw,jdbcType=TINYINT},
      </if>
      <if test="normalWithdraw != null" >
        #{normalWithdraw,jdbcType=TINYINT},
      </if>
      <if test="withdrawDefaulttype != null" >
        #{withdrawDefaulttype,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.config.dao.model.auto.BankConfigExample" resultType="java.lang.Integer" >
    select count(*) from ht_bank_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_bank_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.appLogo != null" >
        app_logo = #{record.appLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.personalEbank != null" >
        personal_ebank = #{record.personalEbank,jdbcType=TINYINT},
      </if>
      <if test="record.enterpriseEbank != null" >
        enterprise_ebank = #{record.enterpriseEbank,jdbcType=TINYINT},
      </if>
      <if test="record.quickPayment != null" >
        quick_payment = #{record.quickPayment,jdbcType=TINYINT},
      </if>
      <if test="record.immediatelyWithdraw != null" >
        immediately_withdraw = #{record.immediatelyWithdraw,jdbcType=TINYINT},
      </if>
      <if test="record.quickWithdraw != null" >
        quick_withdraw = #{record.quickWithdraw,jdbcType=TINYINT},
      </if>
      <if test="record.normalWithdraw != null" >
        normal_withdraw = #{record.normalWithdraw,jdbcType=TINYINT},
      </if>
      <if test="record.withdrawDefaulttype != null" >
        withdraw_defaulttype = #{record.withdrawDefaulttype,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_bank_config
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      app_logo = #{record.appLogo,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      personal_ebank = #{record.personalEbank,jdbcType=TINYINT},
      enterprise_ebank = #{record.enterpriseEbank,jdbcType=TINYINT},
      quick_payment = #{record.quickPayment,jdbcType=TINYINT},
      immediately_withdraw = #{record.immediatelyWithdraw,jdbcType=TINYINT},
      quick_withdraw = #{record.quickWithdraw,jdbcType=TINYINT},
      normal_withdraw = #{record.normalWithdraw,jdbcType=TINYINT},
      withdraw_defaulttype = #{record.withdrawDefaulttype,jdbcType=TINYINT},
      `status` = #{record.status,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.config.dao.model.auto.BankConfig" >
    update ht_bank_config
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="appLogo != null" >
        app_logo = #{appLogo,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="personalEbank != null" >
        personal_ebank = #{personalEbank,jdbcType=TINYINT},
      </if>
      <if test="enterpriseEbank != null" >
        enterprise_ebank = #{enterpriseEbank,jdbcType=TINYINT},
      </if>
      <if test="quickPayment != null" >
        quick_payment = #{quickPayment,jdbcType=TINYINT},
      </if>
      <if test="immediatelyWithdraw != null" >
        immediately_withdraw = #{immediatelyWithdraw,jdbcType=TINYINT},
      </if>
      <if test="quickWithdraw != null" >
        quick_withdraw = #{quickWithdraw,jdbcType=TINYINT},
      </if>
      <if test="normalWithdraw != null" >
        normal_withdraw = #{normalWithdraw,jdbcType=TINYINT},
      </if>
      <if test="withdrawDefaulttype != null" >
        withdraw_defaulttype = #{withdrawDefaulttype,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.config.dao.model.auto.BankConfig" >
    update ht_bank_config
    set `name` = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      app_logo = #{appLogo,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      personal_ebank = #{personalEbank,jdbcType=TINYINT},
      enterprise_ebank = #{enterpriseEbank,jdbcType=TINYINT},
      quick_payment = #{quickPayment,jdbcType=TINYINT},
      immediately_withdraw = #{immediatelyWithdraw,jdbcType=TINYINT},
      quick_withdraw = #{quickWithdraw,jdbcType=TINYINT},
      normal_withdraw = #{normalWithdraw,jdbcType=TINYINT},
      withdraw_defaulttype = #{withdrawDefaulttype,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>