<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.user.dao.mapper.auto.CorpOpenAccountRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="busi_code" property="busiCode" jdbcType="CHAR" />
    <result column="busi_name" property="busiName" jdbcType="VARCHAR" />
    <result column="guar_type" property="guarType" jdbcType="CHAR" />
    <result column="open_bank_id" property="openBankId" jdbcType="CHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="is_bank" property="isBank" jdbcType="TINYINT" />
    <result column="card_type" property="cardType" jdbcType="INTEGER" />
    <result column="tax_registration_code" property="taxRegistrationCode" jdbcType="CHAR" />
    <result column="buse_no" property="buseNo" jdbcType="CHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, username, busi_code, busi_name, guar_type, open_bank_id, account, `status`, 
    is_bank, card_type, tax_registration_code, buse_no, remark, create_user, update_user, 
    create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_corp_open_account_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_corp_open_account_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_corp_open_account_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecordExample" >
    delete from ht_corp_open_account_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecord" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_corp_open_account_record (user_id, username, busi_code, 
      busi_name, guar_type, open_bank_id, 
      account, `status`, is_bank, 
      card_type, tax_registration_code, buse_no, 
      remark, create_user, update_user, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{busiCode,jdbcType=CHAR}, 
      #{busiName,jdbcType=VARCHAR}, #{guarType,jdbcType=CHAR}, #{openBankId,jdbcType=CHAR}, 
      #{account,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{isBank,jdbcType=TINYINT}, 
      #{cardType,jdbcType=INTEGER}, #{taxRegistrationCode,jdbcType=CHAR}, #{buseNo,jdbcType=CHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecord" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_corp_open_account_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="busiCode != null" >
        busi_code,
      </if>
      <if test="busiName != null" >
        busi_name,
      </if>
      <if test="guarType != null" >
        guar_type,
      </if>
      <if test="openBankId != null" >
        open_bank_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="isBank != null" >
        is_bank,
      </if>
      <if test="cardType != null" >
        card_type,
      </if>
      <if test="taxRegistrationCode != null" >
        tax_registration_code,
      </if>
      <if test="buseNo != null" >
        buse_no,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="busiCode != null" >
        #{busiCode,jdbcType=CHAR},
      </if>
      <if test="busiName != null" >
        #{busiName,jdbcType=VARCHAR},
      </if>
      <if test="guarType != null" >
        #{guarType,jdbcType=CHAR},
      </if>
      <if test="openBankId != null" >
        #{openBankId,jdbcType=CHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isBank != null" >
        #{isBank,jdbcType=TINYINT},
      </if>
      <if test="cardType != null" >
        #{cardType,jdbcType=INTEGER},
      </if>
      <if test="taxRegistrationCode != null" >
        #{taxRegistrationCode,jdbcType=CHAR},
      </if>
      <if test="buseNo != null" >
        #{buseNo,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecordExample" resultType="java.lang.Integer" >
    select count(*) from ht_corp_open_account_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_corp_open_account_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.busiCode != null" >
        busi_code = #{record.busiCode,jdbcType=CHAR},
      </if>
      <if test="record.busiName != null" >
        busi_name = #{record.busiName,jdbcType=VARCHAR},
      </if>
      <if test="record.guarType != null" >
        guar_type = #{record.guarType,jdbcType=CHAR},
      </if>
      <if test="record.openBankId != null" >
        open_bank_id = #{record.openBankId,jdbcType=CHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isBank != null" >
        is_bank = #{record.isBank,jdbcType=TINYINT},
      </if>
      <if test="record.cardType != null" >
        card_type = #{record.cardType,jdbcType=INTEGER},
      </if>
      <if test="record.taxRegistrationCode != null" >
        tax_registration_code = #{record.taxRegistrationCode,jdbcType=CHAR},
      </if>
      <if test="record.buseNo != null" >
        buse_no = #{record.buseNo,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_corp_open_account_record
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      busi_code = #{record.busiCode,jdbcType=CHAR},
      busi_name = #{record.busiName,jdbcType=VARCHAR},
      guar_type = #{record.guarType,jdbcType=CHAR},
      open_bank_id = #{record.openBankId,jdbcType=CHAR},
      account = #{record.account,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      is_bank = #{record.isBank,jdbcType=TINYINT},
      card_type = #{record.cardType,jdbcType=INTEGER},
      tax_registration_code = #{record.taxRegistrationCode,jdbcType=CHAR},
      buse_no = #{record.buseNo,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecord" >
    update ht_corp_open_account_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="busiCode != null" >
        busi_code = #{busiCode,jdbcType=CHAR},
      </if>
      <if test="busiName != null" >
        busi_name = #{busiName,jdbcType=VARCHAR},
      </if>
      <if test="guarType != null" >
        guar_type = #{guarType,jdbcType=CHAR},
      </if>
      <if test="openBankId != null" >
        open_bank_id = #{openBankId,jdbcType=CHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="isBank != null" >
        is_bank = #{isBank,jdbcType=TINYINT},
      </if>
      <if test="cardType != null" >
        card_type = #{cardType,jdbcType=INTEGER},
      </if>
      <if test="taxRegistrationCode != null" >
        tax_registration_code = #{taxRegistrationCode,jdbcType=CHAR},
      </if>
      <if test="buseNo != null" >
        buse_no = #{buseNo,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.user.dao.model.auto.CorpOpenAccountRecord" >
    update ht_corp_open_account_record
    set user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      busi_code = #{busiCode,jdbcType=CHAR},
      busi_name = #{busiName,jdbcType=VARCHAR},
      guar_type = #{guarType,jdbcType=CHAR},
      open_bank_id = #{openBankId,jdbcType=CHAR},
      account = #{account,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      is_bank = #{isBank,jdbcType=TINYINT},
      card_type = #{cardType,jdbcType=INTEGER},
      tax_registration_code = #{taxRegistrationCode,jdbcType=CHAR},
      buse_no = #{buseNo,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>