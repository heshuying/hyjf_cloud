<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.user.dao.mapper.auto.PreRegistMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.user.dao.model.auto.PreRegist" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="referrer" property="referrer" jdbcType="VARCHAR" />
    <result column="utm_id" property="utmId" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="pre_regist_time" property="preRegistTime" jdbcType="INTEGER" />
    <result column="regist_flag" property="registFlag" jdbcType="TINYINT" />
    <result column="regist_time" property="registTime" jdbcType="INTEGER" />
    <result column="platform_id" property="platformId" jdbcType="VARCHAR" />
    <result column="platform_name" property="platformName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mobile, referrer, utm_id, source_id, pre_regist_time, regist_flag, regist_time, 
    platform_id, platform_name, remark, create_time, update_time, create_user_id, update_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.user.dao.model.auto.PreRegistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_pre_regist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_pre_regist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_pre_regist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.user.dao.model.auto.PreRegistExample" >
    delete from ht_pre_regist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.user.dao.model.auto.PreRegist" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_pre_regist (mobile, referrer, utm_id, 
      source_id, pre_regist_time, regist_flag, 
      regist_time, platform_id, platform_name, 
      remark, create_time, update_time, 
      create_user_id, update_user_id)
    values (#{mobile,jdbcType=VARCHAR}, #{referrer,jdbcType=VARCHAR}, #{utmId,jdbcType=INTEGER}, 
      #{sourceId,jdbcType=INTEGER}, #{preRegistTime,jdbcType=INTEGER}, #{registFlag,jdbcType=TINYINT}, 
      #{registTime,jdbcType=INTEGER}, #{platformId,jdbcType=VARCHAR}, #{platformName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.user.dao.model.auto.PreRegist" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_pre_regist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="referrer != null" >
        referrer,
      </if>
      <if test="utmId != null" >
        utm_id,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="preRegistTime != null" >
        pre_regist_time,
      </if>
      <if test="registFlag != null" >
        regist_flag,
      </if>
      <if test="registTime != null" >
        regist_time,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="platformName != null" >
        platform_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="referrer != null" >
        #{referrer,jdbcType=VARCHAR},
      </if>
      <if test="utmId != null" >
        #{utmId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="preRegistTime != null" >
        #{preRegistTime,jdbcType=INTEGER},
      </if>
      <if test="registFlag != null" >
        #{registFlag,jdbcType=TINYINT},
      </if>
      <if test="registTime != null" >
        #{registTime,jdbcType=INTEGER},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="platformName != null" >
        #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.user.dao.model.auto.PreRegistExample" resultType="java.lang.Integer" >
    select count(*) from ht_pre_regist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_pre_regist
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.referrer != null" >
        referrer = #{record.referrer,jdbcType=VARCHAR},
      </if>
      <if test="record.utmId != null" >
        utm_id = #{record.utmId,jdbcType=INTEGER},
      </if>
      <if test="record.sourceId != null" >
        source_id = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.preRegistTime != null" >
        pre_regist_time = #{record.preRegistTime,jdbcType=INTEGER},
      </if>
      <if test="record.registFlag != null" >
        regist_flag = #{record.registFlag,jdbcType=TINYINT},
      </if>
      <if test="record.registTime != null" >
        regist_time = #{record.registTime,jdbcType=INTEGER},
      </if>
      <if test="record.platformId != null" >
        platform_id = #{record.platformId,jdbcType=VARCHAR},
      </if>
      <if test="record.platformName != null" >
        platform_name = #{record.platformName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_pre_regist
    set id = #{record.id,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      referrer = #{record.referrer,jdbcType=VARCHAR},
      utm_id = #{record.utmId,jdbcType=INTEGER},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      pre_regist_time = #{record.preRegistTime,jdbcType=INTEGER},
      regist_flag = #{record.registFlag,jdbcType=TINYINT},
      regist_time = #{record.registTime,jdbcType=INTEGER},
      platform_id = #{record.platformId,jdbcType=VARCHAR},
      platform_name = #{record.platformName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.user.dao.model.auto.PreRegist" >
    update ht_pre_regist
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="referrer != null" >
        referrer = #{referrer,jdbcType=VARCHAR},
      </if>
      <if test="utmId != null" >
        utm_id = #{utmId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="preRegistTime != null" >
        pre_regist_time = #{preRegistTime,jdbcType=INTEGER},
      </if>
      <if test="registFlag != null" >
        regist_flag = #{registFlag,jdbcType=TINYINT},
      </if>
      <if test="registTime != null" >
        regist_time = #{registTime,jdbcType=INTEGER},
      </if>
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="platformName != null" >
        platform_name = #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.user.dao.model.auto.PreRegist" >
    update ht_pre_regist
    set mobile = #{mobile,jdbcType=VARCHAR},
      referrer = #{referrer,jdbcType=VARCHAR},
      utm_id = #{utmId,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      pre_regist_time = #{preRegistTime,jdbcType=INTEGER},
      regist_flag = #{registFlag,jdbcType=TINYINT},
      regist_time = #{registTime,jdbcType=INTEGER},
      platform_id = #{platformId,jdbcType=VARCHAR},
      platform_name = #{platformName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>