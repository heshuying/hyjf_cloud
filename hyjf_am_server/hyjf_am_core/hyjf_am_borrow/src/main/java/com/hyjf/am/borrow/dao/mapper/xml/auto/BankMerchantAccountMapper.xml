<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyjf.am.borrow.dao.mapper.auto.BankMerchantAccountMapper">
  <resultMap id="BaseResultMap" type="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="account_balance" jdbcType="DECIMAL" property="accountBalance" />
    <result column="available_balance" jdbcType="DECIMAL" property="availableBalance" />
    <result column="frost" jdbcType="DECIMAL" property="frost" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="is_set_password" jdbcType="INTEGER" property="isSetPassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_name, account_type, account_code, account_balance, available_balance, 
    frost, create_time, update_time, is_set_password
  </sql>
  <select id="selectByExample" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_bank_merchant_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ht_bank_merchant_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ht_bank_merchant_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccountExample">
    delete from ht_bank_merchant_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_merchant_account (account_name, account_type, account_code, 
      account_balance, available_balance, frost, 
      create_time, update_time, is_set_password
      )
    values (#{accountName,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR}, 
      #{accountBalance,jdbcType=DECIMAL}, #{availableBalance,jdbcType=DECIMAL}, #{frost,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, #{isSetPassword,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_merchant_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="accountBalance != null">
        account_balance,
      </if>
      <if test="availableBalance != null">
        available_balance,
      </if>
      <if test="frost != null">
        frost,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isSetPassword != null">
        is_set_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountBalance != null">
        #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="frost != null">
        #{frost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="isSetPassword != null">
        #{isSetPassword,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccountExample" resultType="java.lang.Integer">
    select count(*) from ht_bank_merchant_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ht_bank_merchant_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCode != null">
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBalance != null">
        account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.availableBalance != null">
        available_balance = #{record.availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.frost != null">
        frost = #{record.frost,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.isSetPassword != null">
        is_set_password = #{record.isSetPassword,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ht_bank_merchant_account
    set id = #{record.id,jdbcType=INTEGER},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      available_balance = #{record.availableBalance,jdbcType=DECIMAL},
      frost = #{record.frost,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      is_set_password = #{record.isSetPassword,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    update ht_bank_merchant_account
    <set>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountBalance != null">
        account_balance = #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        available_balance = #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="frost != null">
        frost = #{frost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="isSetPassword != null">
        is_set_password = #{isSetPassword,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    update ht_bank_merchant_account
    set account_name = #{accountName,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_code = #{accountCode,jdbcType=VARCHAR},
      account_balance = #{accountBalance,jdbcType=DECIMAL},
      available_balance = #{availableBalance,jdbcType=DECIMAL},
      frost = #{frost,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      is_set_password = #{isSetPassword,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="account_balance" jdbcType="DECIMAL" property="accountBalance" />
    <result column="available_balance" jdbcType="DECIMAL" property="availableBalance" />
    <result column="frost" jdbcType="DECIMAL" property="frost" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="is_set_password" jdbcType="INTEGER" property="isSetPassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_name, account_type, account_code, account_balance, available_balance, 
    frost, create_time, update_time, is_set_password
  </sql>
  <select id="selectByExample" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_bank_merchant_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ht_bank_merchant_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ht_bank_merchant_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccountExample">
    delete from ht_bank_merchant_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_merchant_account (account_name, account_type, account_code, 
      account_balance, available_balance, frost, 
      create_time, update_time, is_set_password
      )
    values (#{accountName,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR}, 
      #{accountBalance,jdbcType=DECIMAL}, #{availableBalance,jdbcType=DECIMAL}, #{frost,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, #{isSetPassword,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_merchant_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="accountBalance != null">
        account_balance,
      </if>
      <if test="availableBalance != null">
        available_balance,
      </if>
      <if test="frost != null">
        frost,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isSetPassword != null">
        is_set_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountBalance != null">
        #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="frost != null">
        #{frost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="isSetPassword != null">
        #{isSetPassword,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccountExample" resultType="java.lang.Integer">
    select count(*) from ht_bank_merchant_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ht_bank_merchant_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCode != null">
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accountBalance != null">
        account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.availableBalance != null">
        available_balance = #{record.availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.frost != null">
        frost = #{record.frost,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.isSetPassword != null">
        is_set_password = #{record.isSetPassword,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ht_bank_merchant_account
    set id = #{record.id,jdbcType=INTEGER},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      available_balance = #{record.availableBalance,jdbcType=DECIMAL},
      frost = #{record.frost,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      is_set_password = #{record.isSetPassword,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    update ht_bank_merchant_account
    <set>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountBalance != null">
        account_balance = #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        available_balance = #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="frost != null">
        frost = #{frost,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="isSetPassword != null">
        is_set_password = #{isSetPassword,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.borrow.dao.model.auto.BankMerchantAccount">
    update ht_bank_merchant_account
    set account_name = #{accountName,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_code = #{accountCode,jdbcType=VARCHAR},
      account_balance = #{accountBalance,jdbcType=DECIMAL},
      available_balance = #{availableBalance,jdbcType=DECIMAL},
      frost = #{frost,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      is_set_password = #{isSetPassword,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>