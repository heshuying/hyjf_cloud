<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper  namespace="com.hyjf.am.trade.dao.mapper.customize.AdminAccountDetailCustomizeMapper">
	<resultMap id="AccountDetailMapResult" type="com.hyjf.am.trade.dao.model.customize.AdminAccountDetailCustomize">
		<result column="id" property="id" />
		<result column="user_id" property="userId" /> <!-- 用户id -->
		<result column="username" property="username" /> <!-- 用户名 -->
		<result column="referrer_name" property="referrerName" /> <!-- 推荐人 -->
		<result column="referrer_group" property="referrerGroup" /> <!-- 推荐组 -->
		<result column="nid" property="nid" /> <!-- 订单号 -->
		<result column="type" property="type" /> <!-- 操作类型 -->
		<result column="trade_type" property="tradeType" /> <!-- 交易类型  -->
		<result column="amount" property="amount" /> <!-- 操作金额  -->
		<result column="balance" property="balance" /> <!-- 可用金额 -->
		<result column="frost" property="frost" /> <!-- 冻结金额 -->
		<result column="planBalance" property="planBalance"/><!-- 汇添金可用金额 -->
		<result column="planFrost" property="planFrost"/><!-- 汇添金冻结金额 -->
		<result column="remark" property="remark" /> <!-- 备注  -->
		<result column="create_time" property="createTime" /> <!-- 交易时间  -->
		<result column="is_bank" property="isBank" /> <!-- 是否是银行存管 -->
		<result column="account_id" property="accountId" /> <!-- 电子账号 -->
		<result column="seq_no" property="seqNo" /> <!-- 交易流水号  -->
		<result column="bank_balance" property="bankBalance" /> <!-- 银行存管余额  -->
		<result column="bank_frost" property="bankFrost" /> <!-- 银行存管冻结金额-->
		<result column="bank_total" property="bankTotal" /> <!-- 银行存管总资产-->
		<result column="check_status" property="checkStatus" /> <!-- 对账状态 -->
		<result column="trade_status" property="tradeStatus" /> <!-- 交易状态  -->
	</resultMap>

	<select id="queryAccountDetails" resultMap="AccountDetailMapResult" parameterType="java.util.Map">
		SELECT
		l.id,
		l.user_id AS user_id,
		hu.username as username,
		hu2.username as 'referrer_name',
		l.nid,
		CASE l.type
		WHEN 1 THEN
		'收入'
		WHEN 2 THEN
		'支出'
		WHEN 3 THEN
		'冻结'
		WHEN 4 THEN
		'解冻'
		ELSE
		'其它'
		END AS type,
		t.`name` AS trade_type,
		l.amount,
		l.balance,
		IFNULL(l.frost, 0) AS frost,
		IFNULL(l.plan_balance, 0) AS planBalance,
		IFNULL(l.plan_frost, 0) AS planFrost,
		l.remark,
		date_format(
		l.create_time,
		'%Y-%c-%d %H:%i:%s'
		) AS 'create_time',
		l.account_id,
		l.is_bank,
		l.seq_no,
		IFNULL(l.bank_total, 0) AS bank_total,
		IFNULL(l.bank_balance, 0) AS bank_balance,
		IFNULL(l.bank_frost, 0) AS bank_frost,
		l.trade_status,
		l.check_status
		FROM
		ht_account_list l
		LEFT JOIN ht_account_trade t ON l.trade = t.`value`
		LEFT JOIN hyjf_user.ht_user hu ON l.user_id = hu.user_id
		LEFT JOIN hyjf_user.ht_spreads_user hsu ON l.user_id = hsu.user_id
		LEFT JOIN hyjf_user.ht_user hu2 on hsu.spreads_user_id = hu2.user_id
		WHERE 1=1
		<include refid="where-all-page-condition"/>
		ORDER BY l.create_time DESC, l.id DESC
		<if test="limitStart >= 0 and limitEnd > 0" >
			LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
		</if>
	</select>
	<select id="queryAccountDetailCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT COUNT(1)
		FROM ht_account_list l
		LEFT JOIN ht_account_trade t ON l.trade= t.`value`
		LEFT JOIN hyjf_user.ht_user hu ON l.user_id = hu.user_id
		LEFT JOIN hyjf_user.ht_spreads_user hsu ON l.user_id = hsu.user_id
		LEFT JOIN hyjf_user.ht_user hu2 on hsu.spreads_user_id = hu2.user_id
		WHERE 1=1
		<include refid="where-all-page-condition"/>
	</select>
	<sql id="where-all-page-condition">
		<if test="userId != null and userId != 0">
			AND l.user_id = #{userId}
		</if>
		<if test="referrerName != null and referrerName != ''">
			AND hu2.username = #{referrerName}
		</if>
		<if test="username != null and username != ''">
			AND hu.username = #{username}
		</if>
		<if test="tradeTypeSearch != null and tradeTypeSearch != ''">
			AND t.id = #{tradeTypeSearch}
		</if>
		<if test="nid != null and nid != ''">
			AND l.nid = #{nid}
		</if>
		<if test="typeSearch != null and typeSearch != ''">
			AND l.type = #{typeSearch}
		</if>
		<if test="isBank != null and isBank != ''">
			AND l.is_bank = #{isBank}
		</if>
		<if test="checkStatus != null and checkStatus != ''">
			AND l.check_status = #{checkStatus}
		</if>
		<if test="tradeStatus != null and tradeStatus != ''">
			AND l.trade_status = #{tradeStatus}
		</if>
		<if test="accountId != null and accountId != ''">
			AND l.account_id = #{accountId}
		</if>
		<if test="seqNo != null and seqNo != ''">
			AND l.seq_no = #{seqNo}
		</if>
		<if test="balance != null">
			AND l.balance = #{balance}
		</if>
		<if test="frost != null">
			AND l.frost = #{frost}
		</if>
		<if test="remarkSrch != null and remarkSrch != ''">
			AND l.remark = #{remarkSrch}
		</if>
		<if test="startDate != null and startDate != ''">
			AND l.create_time <![CDATA[>=]]>  CONCAT(#{startDate},' 00:00:00')
		</if>
		<if test="endDate != null and endDate != ''">
			AND l.create_time <![CDATA[<=]]> CONCAT(#{endDate},' 23:59:59')
		</if>
	</sql>

	<resultMap id="queryAccountDetailErrorUserListMap" type="com.hyjf.am.trade.dao.model.customize.AdminAccountDetailDataRepairCustomize">
		<result column="user_id" property="userId" /> <!-- 用户id -->
		<result column="id" property="id" /> <!-- 交易明细id -->
	</resultMap>

	<!--查询出20170120还款后,交易明细有问题的用户ID-->
	<select id="queryAccountDetailErrorUserList"  resultMap="queryAccountDetailErrorUserListMap" >
		SELECT DISTINCT
			(bal.user_id) AS user_id
		FROM
			ht_account_list bal
		LEFT JOIN ht_borrow_recover br ON bal.user_id = br.user_id
		AND bal.nid = br.repay_ordid
		WHERE
			br.borrow_nid IN (
				'HXD160709202',
				'GYD160908704',
				'HDD161004504',
				'HDD161004505',
				'HDD161004506',
				'HXD160709203',
				'HDD161208102',
				'GYD160908705',
				'HXD160709204',
				'HBD161005101',
				'HXD160709205',
				'HDD161005201',
				'HBD161111004',
				'HDD161005202',
				'HDD161208103',
				'HDD161005203',
				'HDD161005204',
				'HFD160710101',
				'HDD161005205',
				'HBD161111005',
				'HDD161005206',
				'HDD161005207',
				'HBD161111701',
				'HDD161005208',
				'NEW161207803',
				'HDD161005209',
				'HDD160710401',
				'HBD161111702',
				'HFD161005601',
				'HDD160710402',
				'HDD161005801',
				'HDD161208104',
				'NEW161209901',
				'HDD161005802',
				'HBD161111703',
				'HDD161006001',
				'NEW161210001',
				'HDD161006002',
				'HDD161006003',
				'HDD161006004',
				'HDD161006005',
				'HDD161006006',
				'HBD161111704',
				'HDD160710403',
				'HDD161006007',
				'HBD161006101',
				'HDD161208105'
			);
	</select>
	<!--查询交易明细最小的id-->
	<select id="queryAccountDetailIdByUserId" resultMap="queryAccountDetailErrorUserListMap" parameterType="java.lang.Integer">
		SELECT
		min(hal.id) AS id
		FROM
		ht_account_list hal
		LEFT JOIN ht_borrow_recover br ON hal.user_id = br.user_id
		AND hal.nid = br.repay_ordid
		WHERE
		br.borrow_nid IN (
		'HXD160709202',
		'GYD160908704',
		'HDD161004504',
		'HDD161004505',
		'HDD161004506',
		'HXD160709203',
		'HDD161208102',
		'GYD160908705',
		'HXD160709204',
		'HBD161005101',
		'HXD160709205',
		'HDD161005201',
		'HBD161111004',
		'HDD161005202',
		'HDD161208103',
		'HDD161005203',
		'HDD161005204',
		'HFD160710101',
		'HDD161005205',
		'HBD161111005',
		'HDD161005206',
		'HDD161005207',
		'HBD161111701',
		'HDD161005208',
		'NEW161207803',
		'HDD161005209',
		'HDD160710401',
		'HBD161111702',
		'HFD161005601',
		'HDD160710402',
		'HDD161005801',
		'HDD161208104',
		'NEW161209901',
		'HDD161005802',
		'HBD161111703',
		'HDD161006001',
		'NEW161210001',
		'HDD161006002',
		'HDD161006003',
		'HDD161006004',
		'HDD161006005',
		'HDD161006006',
		'HBD161111704',
		'HDD160710403',
		'HDD161006007',
		'HBD161006101',
		'HDD161208105'
		) AND hal.user_id = #{userId};
	</select>
	<!--// 根据查询用交易类型查询用户操作金额-->
	<sql id="Base_Column_List" >
		id, type_id, `name`, nid, `value`, `status`, `order`, `operation`
	</sql>
	<select id="selectAccountTrade" resultType="com.hyjf.am.trade.dao.model.auto.AccountTrade" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		ht_account_trade hat
		WHERE
		lower(hat.value) = lower(#{trade})
		AND hat.status = 1
	</select>
	<select id="selectNextAccountList" resultType="com.hyjf.am.trade.dao.model.auto.AccountList" parameterType="java.util.Map">
		SELECT
		*
		FROM
		ht_account_list hal
		WHERE
		hal.user_id = #{userId}
		AND hal.id > #{id}
		ORDER BY
		hal.id ASC
		LIMIT 1;
	</select>
</mapper>