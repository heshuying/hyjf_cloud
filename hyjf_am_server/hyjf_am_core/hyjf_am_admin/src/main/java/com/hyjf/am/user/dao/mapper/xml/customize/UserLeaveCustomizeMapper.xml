<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.hyjf.am.user.dao.mapper.customize.UserLeaveCustomizeMapper">
	<resultMap id="employeeMapResult" type="com.hyjf.am.user.dao.model.auto.User">
		<result column="userId" property="userId" /> <!-- 用户ID -->
	</resultMap>

	<select id="queryEmployeeList" resultMap="employeeMapResult" parameterType="java.lang.Integer">
		SELECT
			oau.hyd_id AS userId
		FROM
			ht_r_oa_users oau
			INNER JOIN ht_r_oa_department oad ON oau.departmentid = oad.id
		WHERE
			oau.user_status = 'Q'
			AND oau.user_type=2
	</select>

	<update id="updateSpreadAttribute" parameterType="java.lang.Integer">
		UPDATE ht_user_info u
		inner join ht_spreads_user s on u.user_id=s.user_id
		SET u.attribute = 0
		WHERE
		 spreads_user_id = #{referrer}
	</update>

	<resultMap id="userAndDepartmentMapResult" type="com.hyjf.am.user.dao.model.customize.UserUpdateParamCustomize">
		<result column="userId" property="userId" />
		<result column="username" property="username" />
		<result column="truename" property="truename" />
		<result column="cuttype" property="cuttype" />
	</resultMap>

	<select id="queryUserAndDepartment" resultMap="userAndDepartmentMapResult" parameterType="java.lang.Integer">
		SELECT
			ou.hyd_id AS userId,
			hu.username AS username,
			ou.user_realname AS truename,
			od.cuttype AS cuttype
		FROM
			ht_user hu
		LEFT JOIN ht_r_oa_users ou ON hu.user_id = ou.hyd_id
		LEFT JOIN ht_r_oa_department od ON ou.departmentid = od.id
		WHERE
			hyd_id IS NOT NULL
		AND ou.hyd_id = #{userId} 
		AND ou.user_status IN ('E', 'Q1', 'Q2', 'Q11', 'Q21')
	</select>
	
	<select id="queryEmployeeById" resultMap="employeeMapResult" parameterType="java.lang.Integer">
		SELECT
			oau.hyd_id AS userId
		FROM
			ht_r_oa_users oau
			INNER JOIN ht_r_oa_department oad ON oau.departmentid = oad.id
		WHERE
			oau.user_status = 'Q'
			AND oau.user_type=2
			AND oau.id = #{userId}
	</select>
	<!-- add by nxl 查找离职信息-->
	<resultMap id="UserLeaveMap" type="com.hyjf.am.user.dao.model.customize.AdminEmployeeLeaveCustomize">
		<result column="user_id" 		property="userId" 	  	 jdbcType="INTEGER" />
		<result column="oa_user_id" 	property="oaUserId" 	 jdbcType="INTEGER" />
		<result column="entry_date" 	property="entryDate" 	 jdbcType="VARCHAR" />
		<result column="end_time"  		property="endTime" 		 jdbcType="VARCHAR" />
		<result column="depart_id1"   	property="departId1" 	 jdbcType="VARCHAR" />
		<result column="depart_name1" 	property="departName1" 	 jdbcType="VARCHAR" />
		<result column="depart_id2" 	property="departId2" 	 jdbcType="VARCHAR" />
		<result column="depart_name2" 	property="departName2" 	 jdbcType="INTEGER" />
		<result column="depart_id3" 	property="departId3"     jdbcType="VARCHAR" />
		<result column="depart_name3" 	property="departName3" 	 jdbcType="VARCHAR" />
		<result column="staff_type" 	property="staffType" 	 jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectUserLeaveByUserId" resultMap="UserLeaveMap" parameterType="java.lang.Integer">
		SELECT
		hydu.user_id,
		oau.id AS oa_user_id,
		oau.entrydate AS entry_date,
		FROM_UNIXTIME( oau.leave_success_time, '%Y-%m-%d %H:%i:%s' ) AS end_time,
		oad1.id AS depart_id1,
		oad1.`name` AS depart_name1,
		oad2.id AS depart_id2,
		oad2.`name` AS depart_name2,
		oad3.id AS depart_id3,
		oad3.`name` AS depart_name3,
		oad3.cuttype AS staff_type
		FROM
		ht_r_oa_users oau
		LEFT JOIN ht_user hydu ON hydu.user_id = oau.hyd_id
		LEFT JOIN ht_r_oa_department oad3 ON oau.departmentid = oad3.id
		LEFT JOIN ht_r_oa_department oad2 ON oad2.id = oad3.parentid
		LEFT JOIN ht_r_oa_department oad1 ON oad1.id = oad2.parentid
		WHERE
		hydu.user_id = #{userId}
		AND oau.user_status  = 'Q'
		ORDER BY
		oau.leave_success_time ASC
	</select>
</mapper>

