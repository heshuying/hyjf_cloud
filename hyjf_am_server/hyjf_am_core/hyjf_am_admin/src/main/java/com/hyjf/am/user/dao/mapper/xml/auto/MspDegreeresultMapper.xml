<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.user.dao.mapper.auto.MspDegreeresultMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.user.dao.model.auto.MspDegreeresult" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="apply_id" property="applyId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="admissionYear" property="admissionyear" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="graduationTime" property="graduationtime" jdbcType="VARCHAR" />
    <result column="graduationConclusion" property="graduationconclusion" jdbcType="VARCHAR" />
    <result column="degreeType" property="degreetype" jdbcType="VARCHAR" />
    <result column="schoolNature" property="schoolnature" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hyjf.am.user.dao.model.auto.MspDegreeresult" extends="BaseResultMap" >
    <result column="photoBase64Code" property="photobase64code" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, apply_id, `status`, school, `degree`, admissionYear, major, graduationTime, graduationConclusion, 
    degreeType, schoolNature
  </sql>
  <sql id="Blob_Column_List" >
    photoBase64Code
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ht_msp_degreeresult
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_msp_degreeresult
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ht_msp_degreeresult
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_msp_degreeresult
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresultExample" >
    delete from ht_msp_degreeresult
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresult" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_msp_degreeresult (apply_id, `status`, school, 
      `degree`, admissionYear, major, 
      graduationTime, graduationConclusion, degreeType, 
      schoolNature, photoBase64Code)
    values (#{applyId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{degree,jdbcType=VARCHAR}, #{admissionyear,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{graduationtime,jdbcType=VARCHAR}, #{graduationconclusion,jdbcType=VARCHAR}, #{degreetype,jdbcType=VARCHAR}, 
      #{schoolnature,jdbcType=VARCHAR}, #{photobase64code,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresult" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_msp_degreeresult
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applyId != null" >
        apply_id,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="degree != null" >
        `degree`,
      </if>
      <if test="admissionyear != null" >
        admissionYear,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="graduationtime != null" >
        graduationTime,
      </if>
      <if test="graduationconclusion != null" >
        graduationConclusion,
      </if>
      <if test="degreetype != null" >
        degreeType,
      </if>
      <if test="schoolnature != null" >
        schoolNature,
      </if>
      <if test="photobase64code != null" >
        photoBase64Code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="applyId != null" >
        #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="admissionyear != null" >
        #{admissionyear,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduationtime != null" >
        #{graduationtime,jdbcType=VARCHAR},
      </if>
      <if test="graduationconclusion != null" >
        #{graduationconclusion,jdbcType=VARCHAR},
      </if>
      <if test="degreetype != null" >
        #{degreetype,jdbcType=VARCHAR},
      </if>
      <if test="schoolnature != null" >
        #{schoolnature,jdbcType=VARCHAR},
      </if>
      <if test="photobase64code != null" >
        #{photobase64code,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresultExample" resultType="java.lang.Integer" >
    select count(*) from ht_msp_degreeresult
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_msp_degreeresult
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.applyId != null" >
        apply_id = #{record.applyId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null" >
        `degree` = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.admissionyear != null" >
        admissionYear = #{record.admissionyear,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationtime != null" >
        graduationTime = #{record.graduationtime,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationconclusion != null" >
        graduationConclusion = #{record.graduationconclusion,jdbcType=VARCHAR},
      </if>
      <if test="record.degreetype != null" >
        degreeType = #{record.degreetype,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolnature != null" >
        schoolNature = #{record.schoolnature,jdbcType=VARCHAR},
      </if>
      <if test="record.photobase64code != null" >
        photoBase64Code = #{record.photobase64code,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ht_msp_degreeresult
    set id = #{record.id,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      `degree` = #{record.degree,jdbcType=VARCHAR},
      admissionYear = #{record.admissionyear,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      graduationTime = #{record.graduationtime,jdbcType=VARCHAR},
      graduationConclusion = #{record.graduationconclusion,jdbcType=VARCHAR},
      degreeType = #{record.degreetype,jdbcType=VARCHAR},
      schoolNature = #{record.schoolnature,jdbcType=VARCHAR},
      photoBase64Code = #{record.photobase64code,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_msp_degreeresult
    set id = #{record.id,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      `degree` = #{record.degree,jdbcType=VARCHAR},
      admissionYear = #{record.admissionyear,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      graduationTime = #{record.graduationtime,jdbcType=VARCHAR},
      graduationConclusion = #{record.graduationconclusion,jdbcType=VARCHAR},
      degreeType = #{record.degreetype,jdbcType=VARCHAR},
      schoolNature = #{record.schoolnature,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresult" >
    update ht_msp_degreeresult
    <set >
      <if test="applyId != null" >
        apply_id = #{applyId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="degree != null" >
        `degree` = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="admissionyear != null" >
        admissionYear = #{admissionyear,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduationtime != null" >
        graduationTime = #{graduationtime,jdbcType=VARCHAR},
      </if>
      <if test="graduationconclusion != null" >
        graduationConclusion = #{graduationconclusion,jdbcType=VARCHAR},
      </if>
      <if test="degreetype != null" >
        degreeType = #{degreetype,jdbcType=VARCHAR},
      </if>
      <if test="schoolnature != null" >
        schoolNature = #{schoolnature,jdbcType=VARCHAR},
      </if>
      <if test="photobase64code != null" >
        photoBase64Code = #{photobase64code,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresult" >
    update ht_msp_degreeresult
    set apply_id = #{applyId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      `degree` = #{degree,jdbcType=VARCHAR},
      admissionYear = #{admissionyear,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      graduationTime = #{graduationtime,jdbcType=VARCHAR},
      graduationConclusion = #{graduationconclusion,jdbcType=VARCHAR},
      degreeType = #{degreetype,jdbcType=VARCHAR},
      schoolNature = #{schoolnature,jdbcType=VARCHAR},
      photoBase64Code = #{photobase64code,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.user.dao.model.auto.MspDegreeresult" >
    update ht_msp_degreeresult
    set apply_id = #{applyId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      `degree` = #{degree,jdbcType=VARCHAR},
      admissionYear = #{admissionyear,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      graduationTime = #{graduationtime,jdbcType=VARCHAR},
      graduationConclusion = #{graduationconclusion,jdbcType=VARCHAR},
      degreeType = #{degreetype,jdbcType=VARCHAR},
      schoolNature = #{schoolnature,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>