<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.config.dao.mapper.auto.BankRechargeConfigMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.config.dao.model.auto.BankRechargeConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bank_id" property="bankId" jdbcType="INTEGER" />
    <result column="access_code" property="accessCode" jdbcType="TINYINT" />
    <result column="bank_type" property="bankType" jdbcType="TINYINT" />
    <result column="single_quota" property="singleQuota" jdbcType="DECIMAL" />
    <result column="single_card_quota" property="singleCardQuota" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bank_id, access_code, bank_type, single_quota, single_card_quota, `status`, create_user_id, 
    update_user_id, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.config.dao.model.auto.BankRechargeConfigExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_bank_recharge_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_bank_recharge_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_bank_recharge_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.config.dao.model.auto.BankRechargeConfigExample" >
    delete from ht_bank_recharge_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.config.dao.model.auto.BankRechargeConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_recharge_config (bank_id, access_code, bank_type, 
      single_quota, single_card_quota, `status`, 
      create_user_id, update_user_id, create_time, 
      update_time)
    values (#{bankId,jdbcType=INTEGER}, #{accessCode,jdbcType=TINYINT}, #{bankType,jdbcType=TINYINT}, 
      #{singleQuota,jdbcType=DECIMAL}, #{singleCardQuota,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, 
      #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.config.dao.model.auto.BankRechargeConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_bank_recharge_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="accessCode != null" >
        access_code,
      </if>
      <if test="bankType != null" >
        bank_type,
      </if>
      <if test="singleQuota != null" >
        single_quota,
      </if>
      <if test="singleCardQuota != null" >
        single_card_quota,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankId != null" >
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="accessCode != null" >
        #{accessCode,jdbcType=TINYINT},
      </if>
      <if test="bankType != null" >
        #{bankType,jdbcType=TINYINT},
      </if>
      <if test="singleQuota != null" >
        #{singleQuota,jdbcType=DECIMAL},
      </if>
      <if test="singleCardQuota != null" >
        #{singleCardQuota,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.config.dao.model.auto.BankRechargeConfigExample" resultType="java.lang.Integer" >
    select count(*) from ht_bank_recharge_config
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_bank_recharge_config
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.accessCode != null" >
        access_code = #{record.accessCode,jdbcType=TINYINT},
      </if>
      <if test="record.bankType != null" >
        bank_type = #{record.bankType,jdbcType=TINYINT},
      </if>
      <if test="record.singleQuota != null" >
        single_quota = #{record.singleQuota,jdbcType=DECIMAL},
      </if>
      <if test="record.singleCardQuota != null" >
        single_card_quota = #{record.singleCardQuota,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_bank_recharge_config
    set id = #{record.id,jdbcType=INTEGER},
      bank_id = #{record.bankId,jdbcType=INTEGER},
      access_code = #{record.accessCode,jdbcType=TINYINT},
      bank_type = #{record.bankType,jdbcType=TINYINT},
      single_quota = #{record.singleQuota,jdbcType=DECIMAL},
      single_card_quota = #{record.singleCardQuota,jdbcType=DECIMAL},
      `status` = #{record.status,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.config.dao.model.auto.BankRechargeConfig" >
    update ht_bank_recharge_config
    <set >
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="accessCode != null" >
        access_code = #{accessCode,jdbcType=TINYINT},
      </if>
      <if test="bankType != null" >
        bank_type = #{bankType,jdbcType=TINYINT},
      </if>
      <if test="singleQuota != null" >
        single_quota = #{singleQuota,jdbcType=DECIMAL},
      </if>
      <if test="singleCardQuota != null" >
        single_card_quota = #{singleCardQuota,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.config.dao.model.auto.BankRechargeConfig" >
    update ht_bank_recharge_config
    set bank_id = #{bankId,jdbcType=INTEGER},
      access_code = #{accessCode,jdbcType=TINYINT},
      bank_type = #{bankType,jdbcType=TINYINT},
      single_quota = #{singleQuota,jdbcType=DECIMAL},
      single_card_quota = #{singleCardQuota,jdbcType=DECIMAL},
      `status` = #{status,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>