<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.trade.dao.mapper.auto.NifaReportLogMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.trade.dao.model.auto.NifaReportLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="package_information" property="packageInformation" jdbcType="VARCHAR" />
    <result column="upload_time" property="uploadTime" jdbcType="INTEGER" />
    <result column="file_upload_status" property="fileUploadStatus" jdbcType="TINYINT" />
    <result column="feedback_result" property="feedbackResult" jdbcType="TINYINT" />
    <result column="upload_name" property="uploadName" jdbcType="VARCHAR" />
    <result column="feedback_name" property="feedbackName" jdbcType="VARCHAR" />
    <result column="upload_path" property="uploadPath" jdbcType="VARCHAR" />
    <result column="feedback_path" property="feedbackPath" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, package_information, upload_time, file_upload_status, feedback_result, upload_name, 
    feedback_name, upload_path, feedback_path, create_user_id, update_user_id, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.trade.dao.model.auto.NifaReportLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_nifa_report_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_nifa_report_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_nifa_report_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.trade.dao.model.auto.NifaReportLogExample" >
    delete from ht_nifa_report_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.trade.dao.model.auto.NifaReportLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_nifa_report_log (package_information, upload_time, file_upload_status, 
      feedback_result, upload_name, feedback_name, 
      upload_path, feedback_path, create_user_id, 
      update_user_id, create_time, update_time
      )
    values (#{packageInformation,jdbcType=VARCHAR}, #{uploadTime,jdbcType=INTEGER}, #{fileUploadStatus,jdbcType=TINYINT}, 
      #{feedbackResult,jdbcType=TINYINT}, #{uploadName,jdbcType=VARCHAR}, #{feedbackName,jdbcType=VARCHAR}, 
      #{uploadPath,jdbcType=VARCHAR}, #{feedbackPath,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.trade.dao.model.auto.NifaReportLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_nifa_report_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="packageInformation != null" >
        package_information,
      </if>
      <if test="uploadTime != null" >
        upload_time,
      </if>
      <if test="fileUploadStatus != null" >
        file_upload_status,
      </if>
      <if test="feedbackResult != null" >
        feedback_result,
      </if>
      <if test="uploadName != null" >
        upload_name,
      </if>
      <if test="feedbackName != null" >
        feedback_name,
      </if>
      <if test="uploadPath != null" >
        upload_path,
      </if>
      <if test="feedbackPath != null" >
        feedback_path,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="packageInformation != null" >
        #{packageInformation,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        #{uploadTime,jdbcType=INTEGER},
      </if>
      <if test="fileUploadStatus != null" >
        #{fileUploadStatus,jdbcType=TINYINT},
      </if>
      <if test="feedbackResult != null" >
        #{feedbackResult,jdbcType=TINYINT},
      </if>
      <if test="uploadName != null" >
        #{uploadName,jdbcType=VARCHAR},
      </if>
      <if test="feedbackName != null" >
        #{feedbackName,jdbcType=VARCHAR},
      </if>
      <if test="uploadPath != null" >
        #{uploadPath,jdbcType=VARCHAR},
      </if>
      <if test="feedbackPath != null" >
        #{feedbackPath,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.trade.dao.model.auto.NifaReportLogExample" resultType="java.lang.Integer" >
    select count(*) from ht_nifa_report_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_nifa_report_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.packageInformation != null" >
        package_information = #{record.packageInformation,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null" >
        upload_time = #{record.uploadTime,jdbcType=INTEGER},
      </if>
      <if test="record.fileUploadStatus != null" >
        file_upload_status = #{record.fileUploadStatus,jdbcType=TINYINT},
      </if>
      <if test="record.feedbackResult != null" >
        feedback_result = #{record.feedbackResult,jdbcType=TINYINT},
      </if>
      <if test="record.uploadName != null" >
        upload_name = #{record.uploadName,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackName != null" >
        feedback_name = #{record.feedbackName,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadPath != null" >
        upload_path = #{record.uploadPath,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackPath != null" >
        feedback_path = #{record.feedbackPath,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_nifa_report_log
    set id = #{record.id,jdbcType=INTEGER},
      package_information = #{record.packageInformation,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=INTEGER},
      file_upload_status = #{record.fileUploadStatus,jdbcType=TINYINT},
      feedback_result = #{record.feedbackResult,jdbcType=TINYINT},
      upload_name = #{record.uploadName,jdbcType=VARCHAR},
      feedback_name = #{record.feedbackName,jdbcType=VARCHAR},
      upload_path = #{record.uploadPath,jdbcType=VARCHAR},
      feedback_path = #{record.feedbackPath,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.trade.dao.model.auto.NifaReportLog" >
    update ht_nifa_report_log
    <set >
      <if test="packageInformation != null" >
        package_information = #{packageInformation,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=INTEGER},
      </if>
      <if test="fileUploadStatus != null" >
        file_upload_status = #{fileUploadStatus,jdbcType=TINYINT},
      </if>
      <if test="feedbackResult != null" >
        feedback_result = #{feedbackResult,jdbcType=TINYINT},
      </if>
      <if test="uploadName != null" >
        upload_name = #{uploadName,jdbcType=VARCHAR},
      </if>
      <if test="feedbackName != null" >
        feedback_name = #{feedbackName,jdbcType=VARCHAR},
      </if>
      <if test="uploadPath != null" >
        upload_path = #{uploadPath,jdbcType=VARCHAR},
      </if>
      <if test="feedbackPath != null" >
        feedback_path = #{feedbackPath,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.trade.dao.model.auto.NifaReportLog" >
    update ht_nifa_report_log
    set package_information = #{packageInformation,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=INTEGER},
      file_upload_status = #{fileUploadStatus,jdbcType=TINYINT},
      feedback_result = #{feedbackResult,jdbcType=TINYINT},
      upload_name = #{uploadName,jdbcType=VARCHAR},
      feedback_name = #{feedbackName,jdbcType=VARCHAR},
      upload_path = #{uploadPath,jdbcType=VARCHAR},
      feedback_path = #{feedbackPath,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>