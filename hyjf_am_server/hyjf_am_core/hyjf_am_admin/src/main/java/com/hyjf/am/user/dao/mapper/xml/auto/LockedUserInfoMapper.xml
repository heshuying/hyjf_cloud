<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.user.dao.mapper.auto.LockedUserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.hyjf.am.user.dao.model.auto.LockedUserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="front" property="front" jdbcType="TINYINT" />
    <result column="unlocked" property="unlocked" jdbcType="TINYINT" />
    <result column="lock_time" property="lockTime" jdbcType="TIMESTAMP" />
    <result column="unlock_time" property="unlockTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, username, mobile, front, unlocked, lock_time, unlock_time, `operator`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hyjf.am.user.dao.model.auto.LockedUserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ht_user_loginerror_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ht_user_loginerror_lock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ht_user_loginerror_lock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyjf.am.user.dao.model.auto.LockedUserInfoExample" >
    delete from ht_user_loginerror_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyjf.am.user.dao.model.auto.LockedUserInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_user_loginerror_lock (userid, username, mobile, 
      front, unlocked, lock_time, 
      unlock_time, `operator`)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{front,jdbcType=TINYINT}, #{unlocked,jdbcType=TINYINT}, #{lockTime,jdbcType=TIMESTAMP}, 
      #{unlockTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hyjf.am.user.dao.model.auto.LockedUserInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ht_user_loginerror_lock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="front != null" >
        front,
      </if>
      <if test="unlocked != null" >
        unlocked,
      </if>
      <if test="lockTime != null" >
        lock_time,
      </if>
      <if test="unlockTime != null" >
        unlock_time,
      </if>
      <if test="operator != null" >
        `operator`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="front != null" >
        #{front,jdbcType=TINYINT},
      </if>
      <if test="unlocked != null" >
        #{unlocked,jdbcType=TINYINT},
      </if>
      <if test="lockTime != null" >
        #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unlockTime != null" >
        #{unlockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyjf.am.user.dao.model.auto.LockedUserInfoExample" resultType="java.lang.Integer" >
    select count(*) from ht_user_loginerror_lock
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ht_user_loginerror_lock
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.front != null" >
        front = #{record.front,jdbcType=TINYINT},
      </if>
      <if test="record.unlocked != null" >
        unlocked = #{record.unlocked,jdbcType=TINYINT},
      </if>
      <if test="record.lockTime != null" >
        lock_time = #{record.lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unlockTime != null" >
        unlock_time = #{record.unlockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.operator != null" >
        `operator` = #{record.operator,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ht_user_loginerror_lock
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      front = #{record.front,jdbcType=TINYINT},
      unlocked = #{record.unlocked,jdbcType=TINYINT},
      lock_time = #{record.lockTime,jdbcType=TIMESTAMP},
      unlock_time = #{record.unlockTime,jdbcType=TIMESTAMP},
      `operator` = #{record.operator,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyjf.am.user.dao.model.auto.LockedUserInfo" >
    update ht_user_loginerror_lock
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="front != null" >
        front = #{front,jdbcType=TINYINT},
      </if>
      <if test="unlocked != null" >
        unlocked = #{unlocked,jdbcType=TINYINT},
      </if>
      <if test="lockTime != null" >
        lock_time = #{lockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unlockTime != null" >
        unlock_time = #{unlockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        `operator` = #{operator,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyjf.am.user.dao.model.auto.LockedUserInfo" >
    update ht_user_loginerror_lock
    set userid = #{userid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      front = #{front,jdbcType=TINYINT},
      unlocked = #{unlocked,jdbcType=TINYINT},
      lock_time = #{lockTime,jdbcType=TIMESTAMP},
      unlock_time = #{unlockTime,jdbcType=TIMESTAMP},
      `operator` = #{operator,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>