<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyjf.am.user.dao.mapper.customize.UserManagerCustomizeMapper">
    <resultMap id="UserListVOMap" type="com.hyjf.am.user.dao.model.customize.UserManagerCustomize">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="user_role" property="userRole" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="VARCHAR"/>
        <result column="user_property" property="userProperty" jdbcType="VARCHAR"/>
        <result column="account_status" property="accountStatus" jdbcType="VARCHAR"/>
        <result column="open_account" property="openAccount" jdbcType="VARCHAR"/>
        <result column="bank_open_account" property="bankOpenAccount" jdbcType="VARCHAR"/>
        <result column="bank_open_time" property="bankOpenTime" jdbcType="VARCHAR"/>
        <result column="user_status" property="userStatus" jdbcType="VARCHAR"/>
        <result column="recommend_name" property="recommendName" jdbcType="VARCHAR"/>
        <result column="regist_plat" property="registPlat" jdbcType="VARCHAR"/>
        <result column="reg_time" property="regTime" jdbcType="VARCHAR"/>
        <result column="regionName" property="regionName"/> <!-- 大区 -->
        <result column="branchName" property="branchName"/> <!-- 分公司  -->
        <result column="departmentName" property="departmentName"/> <!-- 部门  -->
        <result column="borrower_type" property="borrowerType" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="VARCHAR"/>
        <result column="regist_area" property="registArea" jdbcType="VARCHAR"/>
        <result column="idcard" property="idcard" jdbcType="VARCHAR"/>
        <result column="customer_id" property="customerId" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="instCode" property="instCode" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectUserMemberList" parameterType="Map" resultMap="UserListVOMap">
      SELECT
		hydu.user_id,
        hydu.username AS user_name,
        hydui.truename AS real_name,
        hydu.mobile,
        hydu.user_type AS type_id,
        hydui.role_id,
        hydui.attribute,
        hydui.birthday,
        hydui.sex,
        hydui.idcard,
        concat(province, city, area) AS regist_area,
        hydu.open_account,
        hydu.`status`,
        hydu.reg_esb,
        hydu.reg_time AS regTime,
        hydui.role_id AS user_role,
        hydui.attribute AS user_property,
        hydu.open_account AS account_status,
        hydu.`status` AS user_status,
        hydu.reg_esb AS regist_plat,
        hydu.user_type AS user_type,
        hydur.username AS recommend_name,
        date_format(
        hydu.reg_time,
        '%Y-%c-%d %H:%i:%s'
        ) AS reg_time,
        CASE
        WHEN hydui.attribute = 2
        OR hydui.attribute = 3 THEN
        hydu.user_id
        ELSE
        hydsu.spreads_user_id
        END AS hyd_id,
        hydui.borrower_type,
        hydu.bank_open_account bank_open_account,
        hydu.inst_code AS instCode,
        hca.customer_id,
        hboa.account,
        hboa.create_time AS bank_open_time,
		CASE
				hydui.attribute 
				WHEN 1 THEN
				d1.NAME 
				WHEN 2 THEN
				dd1.NAME 
				WHEN 3 THEN
				dd1.NAME 
			END AS `regionName`,
		CASE
				hydui.attribute 
				WHEN 1 THEN
				d2.NAME 
				WHEN 2 THEN
				dd2.NAME 
				WHEN 3 THEN
				dd2.NAME 
			END AS `branchName`,
		CASE
				hydui.attribute 
				WHEN 1 THEN
				d3.NAME 
				WHEN 2 THEN
				dd3.NAME 
				WHEN 3 THEN
				dd3.NAME 
			END AS `departmentName`
        FROM
        <choose>
            <when test='whereFlag == "0"'>
                (SELECT * FROM ht_user
                ORDER BY reg_time DESC
                <if test="limitStart != null and limitEnd !=null">
                    LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
                </if>
                ) hydu
            </when>
            <otherwise>
                ht_user hydu
            </otherwise>
        </choose>
			LEFT JOIN ht_user_info hydui ON hydu.user_id = hydui.user_id
			LEFT JOIN ht_spreads_user hydsu ON hydsu.user_id = hydu.user_id
			LEFT JOIN ht_user hydur ON hydur.user_id = hydsu.spreads_user_id
			LEFT JOIN ht_bank_open_account hboa ON hydu.user_id = hboa.user_id
			LEFT JOIN ht_certificate_authority hca ON hydu.user_id = hca.user_id
			LEFT JOIN ht_r_oa_users u ON u.hyd_id = hydsu.spreads_user_id 
			AND u.user_status IN ( 'E', 'Q1', 'Q11', 'Q2', 'Q21' )
			LEFT JOIN ht_r_oa_department d3 ON d3.id = u.departmentid AND d3.id IS NOT NULL 
			LEFT JOIN ht_r_oa_department d2 ON d2.id = d3.parentid
			LEFT JOIN ht_r_oa_department d1 ON d1.id = d2.parentid
			LEFT JOIN ht_r_oa_users ou ON ou.hyd_id = hydu.user_id AND ou.user_status IN ( 'E', 'Q1', 'Q11', 'Q2', 'Q21' )
			LEFT JOIN ht_r_oa_department dd3 ON dd3.id = ou.departmentid AND dd3.id IS NOT NULL
			LEFT JOIN ht_r_oa_department dd2 ON dd2.id = dd3.parentid
		 	LEFT JOIN ht_r_oa_department dd1 ON dd1.id = dd3.parentid
        <include refid="Admin_Where_Clause"/>
        <if test='whereFlag != "0"'>
            ORDER BY hydu.reg_time DESC
            <if test="limitStart != null and limitEnd !=null">
                LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
            </if>
        </if>
    </select>
    <!-- 查询条件 -->
    <sql id="Admin_Where_Clause">
        <where>
            <if test="realName != null and realName != ''">
                AND hydui.truename LIKE CONCAT(#{realName}, '%')
            </if>
            <if test="recommendName != null and recommendName != ''">
                AND hydur.username LIKE CONCAT(#{recommendName}, '%')
            </if>
            <if test="userRole != null and userRole != ''">
                AND hydui.role_id = #{userRole,jdbcType=INTEGER}
            </if>
            <if test="userProperty != null and userProperty != ''">
                AND hydui.attribute = #{userProperty,jdbcType=INTEGER}
            </if>
            <if test="accountStatus != null and accountStatus != ''">
                AND hydu.bank_open_account = #{accountStatus,jdbcType=INTEGER}
            </if>
            <if test="userStatus != null and userStatus != ''">
                AND hydu.`status` = #{userStatus,jdbcType=INTEGER}
            </if>

            <if test="regTimeStart != null and regTimeStart != '' ">
                AND hydu.reg_time <![CDATA[>=]]>  concat(#{regTimeStart},' 00:00:00')
            </if>
            <if test="regTimeEnd != null and regTimeEnd != ''">
                AND hydu.reg_time <![CDATA[<=]]> concat(#{regTimeEnd},' 23:59:59')
            </if>
            <if test="combotreeListSrch != null and combotreeListSrch != ''">
                AND dd3.id in
                <foreach collection="combotreeListSrch" open="(" close=")" separator="," item="dep">
                    #{dep}
                </foreach>
            </if>
            <if test="instCodeSrch != null and instCodeSrch != ''">
                AND hydu.inst_code = #{instCodeSrch,jdbcType=INTEGER}
            </if>
            <if test="userName != null and userName !=''">
				AND hydu.username = #{userName}
			</if>
			<if test="mobile != null and mobile != ''">
				AND hydu.mobile = #{mobile}
			</if>
			<if test="userType != null and userType != ''">
				AND hydu.user_type = #{userType,jdbcType=INTEGER}
			</if>
            <if test="customerId != null and customerId != ''">
                AND hca.customer_id = #{customerId}
            </if>
        </where>
    </sql>

    <select id="countUserRecord" parameterType="Map" resultType="java.lang.Integer">
        <choose>
            <when test='whereFlag == "0"'>
                SELECT
                COUNT(*)
                FROM
                ht_user
            </when>
            <otherwise>
                SELECT COUNT(*) FROM
                ht_user hydu
				LEFT JOIN ht_user_info hydui ON hydu.user_id = hydui.user_id
				LEFT JOIN ht_spreads_user hydsu ON hydsu.user_id = hydu.user_id
				LEFT JOIN ht_user hydur ON hydur.user_id = hydsu.spreads_user_id
				LEFT JOIN ht_bank_open_account hboa ON hydu.user_id = hboa.user_id
				LEFT JOIN ht_certificate_authority hca ON hydu.user_id = hca.user_id
				LEFT JOIN ht_r_oa_users u ON u.hyd_id = hydsu.spreads_user_id 
				AND u.user_status IN ( 'E', 'Q1', 'Q11', 'Q2', 'Q21' )
				LEFT JOIN ht_r_oa_department d3 ON d3.id = u.departmentid AND d3.id IS NOT NULL 
				LEFT JOIN ht_r_oa_department d2 ON d2.id = d3.parentid
				LEFT JOIN ht_r_oa_department d1 ON d1.id = d2.parentid
				LEFT JOIN ht_r_oa_users ou ON ou.hyd_id = hydu.user_id AND ou.user_status IN ( 'E', 'Q1', 'Q11', 'Q2', 'Q21' )
				LEFT JOIN ht_r_oa_department dd3 ON dd3.id = ou.departmentid AND dd3.id IS NOT NULL
				LEFT JOIN ht_r_oa_department dd2 ON dd2.id = dd3.parentid
			 	LEFT JOIN ht_r_oa_department dd1 ON dd1.id = dd3.parentid
                <include refid="Admin_Where_Clause"/>
            </otherwise>
        </choose>
    </select>

    <resultMap id="UserDetailPOMap" type="com.hyjf.am.user.dao.model.customize.UserManagerDetailCustomize">
        <id column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_nick_name" property="userNickName" jdbcType="VARCHAR" />
        <result column="user_property" property="userProperty" jdbcType="INTEGER" />
        <result column="role" property="role" jdbcType="INTEGER" />
        <result column="user_type" property="userType" jdbcType="VARCHAR" />
        <result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
        <result column="depart_name" property="departName" jdbcType="VARCHAR" />
        <result column="regist_pid_name" property="registPidName" jdbcType="VARCHAR" />
        <result column="regist_plat" property="registPlat" jdbcType="INTEGER" />
        <result column="open_account_plat" property="openAccountPlat" jdbcType="INTEGER" />
        <result column="regist_ip" property="registIP" jdbcType="VARCHAR" />
        <result column="regist_time" property="registTime" jdbcType="TIMESTAMP" />
        <result column="open_account_time" property="openAccountTime" jdbcType="TIMESTAMP" />
        <result column="last_login_ip" property="lastLoginIP" jdbcType="VARCHAR" />
        <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR" />
        <result column="em_name" property="emName" jdbcType="VARCHAR" />
        <result column="em_relation" property="emRealtion" jdbcType="INTEGER" />
        <result column="em_phone" property="emPhone" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="email_status" property="emailStatus" jdbcType="INTEGER" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="mobile_status" property="mobileStatus" jdbcType="INTEGER" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="real_name_status" property="realNameStatus" jdbcType="INTEGER" />
        <result column="account" property="account" jdbcType="VARCHAR" />
        <result column="account_status" property="accountStatus" jdbcType="INTEGER" />
        <result column="customer_account" property="customerAccount" jdbcType="VARCHAR" />
        <result column="id_card" property="idCard" jdbcType="VARCHAR" />
        <result column="icon_url" property="iconUrl" jdbcType="VARCHAR" />
        <result column="vip_id" property="vipId" jdbcType="INTEGER" />
        <result column="vip_value" property="vipValue" jdbcType="INTEGER" />
        <result column="vip_exp_date" property="vipExpDate" jdbcType="VARCHAR" />
        <result column="borrower_type" property="borrowerType"  jdbcType="INTEGER" />
        <result column="is_set_password" property="isSetPassword"  jdbcType="INTEGER" />
        <result column="is_ca_flag" property="isCaFlag"  jdbcType="INTEGER" />
    </resultMap>
    <select id="selectUserDetailById" resultMap="UserDetailPOMap" parameterType="java.lang.Integer">
        SELECT
        hydu.user_id,
        hydu.username AS user_name,
        -- hydui.nickname AS user_nick_name,
        -- hydu.iconUrl AS icon_url,
--         from_unixtime(
--         hydui.vip_exp_date,
--         '%Y-%m-%d %H:%i:%s'
--         ) AS vip_exp_date,
        hydui.role_id AS role,
        hydu.user_type AS user_type,
        hydui.attribute AS user_property,
        hydurefer.username AS recommend_name,
        hydd.`name` AS depart_name,
        hydup.source_name AS regist_pid_name,
        hydu.reg_esb AS regist_plat,
        hydu.account_esb AS open_account_plat,
        hydu.reg_ip AS regist_ip,
        date_format(
        hydu.reg_time,
        '%Y-%m-%d %H:%i:%s'
        ) AS regist_time,
        date_format(
        hydac.create_time,
        '%Y-%m-%d %H:%i:%s'
        ) AS open_account_time,
--         hydu.login_ip AS last_login_ip,
--         from_unixtime(
--         hydu.login_time,
--         '%Y-%m-%d %H:%i:%s'
--        ) AS last_login_time,
        hyduc.rl_name AS em_name,
        hyduc.relation AS em_relation,
        hyduc.rl_phone AS em_phone,
        hydu.email,
        hydui.email_isApprove AS email_status,
        hydu.mobile,
        hydui.mobile_isApprove AS mobile_status,
        hydui.truename AS real_name,
        hydui.truename_isApprove AS real_name_status,
        hydu.`status` AS account_status,
        hydac.chinapnr_usrid AS account,
        hydac.chinapnr_usrcustid AS customer_account,
        hydui.idcard AS id_card,
        hydui.borrower_type,
        hydu.is_ca_flag AS is_ca_flag,
        hydu.is_set_password AS is_set_password
        FROM
        ht_user hydu
        LEFT JOIN ht_user_info hydui ON hydu.user_id = hydui.user_id
        LEFT JOIN ht_user_contact hyduc ON hydu.user_id = hyduc.user_id
        LEFT JOIN ht_account_chinapnr hydac ON hydac.user_id = hydu.user_id
        LEFT JOIN ht_utm_reg hydur ON hydur.user_id = hydu.user_id
        LEFT JOIN ht_utm hydutm ON hydur.utm_id = hydutm.utm_id
        LEFT JOIN ht_utm_plat hydup ON hydup.source_id = hydutm.source_id
        LEFT JOIN ht_utm_plat hydup1 ON hydup1.source_id = hydutm.source_id
        LEFT JOIN ht_spreads_user hydsu ON hydsu.user_id = hydu.user_id
        LEFT JOIN ht_user hydurefer ON hydurefer.user_id = hydsu.spreads_user_id
        LEFT JOIN ht_r_oa_users oau ON oau.hyd_id = hydsu.spreads_user_id and oau.user_status IN ('E','Q1','Q11','Q2','Q21')
        LEFT JOIN ht_r_oa_department hydd ON hydd.id = oau.departmentid
        WHERE
        hydu.user_id =#{userId,jdbcType=INTEGER}
    </select>

    <!-- 根据用户id获取开户信息 -->
    <resultMap id="BankOpenAccountPOMap" type="com.hyjf.am.user.dao.model.customize.UserBankOpenAccountCustomize">
        <id column="account" property="account" jdbcType="INTEGER" />
        <result column="open_account_plat" property="openAccountPlat" jdbcType="VARCHAR" />
        <result column="open_account_time" property="openAccountTime" jdbcType="VARCHAR" />
        <result column="user_type" property="userType" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    </resultMap>
    <select id="selectBankOpenAccountByUserId" resultMap="BankOpenAccountPOMap" parameterType="java.lang.Integer">
        SELECT
        hboa.account AS account,
        hydu.bank_account_esb AS  open_account_plat,
        date_format(hboa.create_time,'%Y-%c-%d %H:%i:%s') AS open_account_time,
        hydu.user_type AS user_type,
        hbc.mobile AS mobile
        FROM
        ht_user hydu
        LEFT JOIN ht_bank_open_account hboa ON hboa.user_id = hydu.user_id
        LEFT JOIN ht_bank_card hbc ON hydu.user_id = hbc.user_id
        WHERE
        hydu.user_id =#{userId,jdbcType=INTEGER}
    </select>

    <!-- 根据用户id获取用户修改信息-->
    <resultMap id="UserUpdatePOMap" type="com.hyjf.am.user.dao.model.customize.UserManagerUpdateCustomize">
        <id column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="user_role" property="userRole" jdbcType="INTEGER" />
        <result column="user_property" property="userProperty" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="borrower_type" property="borrowerType"  jdbcType="INTEGER" />
    </resultMap>
    <select id="selectUserUpdateById" resultMap="UserUpdatePOMap" parameterType="java.lang.Integer">
        SELECT
        hydu.user_id,
        hydu.username AS user_name,
        hydu.email,
        hydu.mobile,
        hydui.role_id AS user_role,
        hydu.status,
        hydui.borrower_type
        FROM
        ht_user hydu
        LEFT JOIN ht_user_info hydui ON hydu.user_id = hydui.user_id
        WHERE
        hydu.user_id = #{userId,jdbcType=INTEGER}
    </select>

    <select id="selectTenderCount" resultType="java.lang.Integer">
    SELECT
    IFNULL(SUM(a),0)
    FROM (
      SELECT COUNT(*) a FROM ht_borrow_tender WHERE user_id = #{userId}
        UNION ALL
      SELECT COUNT(*) a FROM ht_borrow_tender WHERE user_id = #{userId}
        UNION ALL
      SELECT COUNT(*) a FROM ht_borrow_tender_cpn WHERE user_id = #{userId}
        UNION ALL
      SELECT COUNT(*) a FROM ht_hjh_accede WHERE user_id =  #{userId}
     ) b
  </select>
    <resultMap id="BaseResultMap" type="com.hyjf.am.user.dao.model.auto.UserChangeLog" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="role" property="role" jdbcType="INTEGER" />
        <result column="attribute" property="attribute" jdbcType="INTEGER" />
        <result column="recommend_user" property="recommendUser" jdbcType="VARCHAR" />
        <result column="is51" property="is51" jdbcType="INTEGER" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="update_type" property="updateType" jdbcType="INTEGER" />
        <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
        <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
        <result column="update_time" property="updateTime" jdbcType="DATE" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="borrower_type" property="borrowerType" jdbcType="VARCHAR" />
        <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    </resultMap>
    <select id="queryChangeLogList" resultMap="BaseResultMap" parameterType="com.hyjf.am.user.dao.model.auto.UserChangeLog">
        SELECT
        id,
        user_id,
        username,
        real_name,
        mobile,
        idcard,
        `role`,
        `attribute`,
        recommend_user,
        is51,
        `status`,
        update_user_id,
        update_user,
        update_type,
        update_time,
        remark,
        borrower_type
        FROM
        ht_user_change_log l
        WHERE 1=1
        <include refid="where-all-page-condition"/>
        ORDER BY l.update_time DESC
        <if test="limitStart != null and limitEnd !=null">
            LIMIT #{limitStart,jdbcType=INTEGER} , #{limitEnd,jdbcType=INTEGER}
        </if>
    </select>
    <sql id="where-all-page-condition">
        <if test="userId != null and userId != 0">
            AND l.user_id = #{userId}
        </if>
        <if test="username != null and username != ''">
            AND l.username LIKE CONCAT( #{username}, '%')
        </if>
        <if test="realName != null and realName != ''">
            AND l.real_name LIKE CONCAT( #{realName}, '%')
        </if>
        <if test="mobile != null and mobile != ''">
            AND l.mobile LIKE CONCAT( #{mobile}, '%')
        </if>
        <if test="recommendUser != null and recommendUser != ''">
            AND l.recommend_user LIKE CONCAT(#{recommendUser}, '%')
        </if>
        <if test="attribute != null and attribute != ''">
            AND l.attribute = #{attribute}
        </if>
        <if test="is51 != null and is51 != ''">
            AND l.is51 = #{is51}
        </if>
        <if test="changeType != null and changeType != ''">
            AND l.update_type = #{changeType}
        </if>
        <if test="startTime != null and startTime != ''">
            AND l.change_time <![CDATA[>=]]> CONCAT(#{startTime},' 00:00:00')
        </if>
        <if test="endTime != null and endTime != ''">
            AND l.change_time <![CDATA[<=]]> CONCAT(#{endTime},' 23:59:59')
        </if>
    </sql>

    <!--根据用户id获取推荐人信息-->
    <resultMap id="UserRecommendPOMap" type="com.hyjf.am.user.dao.model.customize.UserRecommendCustomize">
        <id column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
        <result column="true_name" property="trueName" jdbcType="VARCHAR" />
        <result column="id_card" property="idCard" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>
    <select id="searchUserRecommend" resultMap="UserRecommendPOMap" parameterType="java.lang.Integer">
        SELECT
        hydu.user_id,
        hydu.username AS user_name,
        hydurefer.username AS recommend_name,
        hyui.truename AS true_name,
        hyui.idcard AS id_card
        FROM
        ht_user hydu
        LEFT JOIN ht_spreads_user hydsu ON hydsu.user_id = hydu.user_id
        LEFT JOIN ht_user hydurefer ON hydurefer.user_id = hydsu.spreads_user_id
        LEFT JOIN ht_user_info hyui ON hyui.user_id = hydu.user_id
        WHERE
        hydu.user_id =#{userId,jdbcType=INTEGER}
    </select>

    <resultMap id="UserInfoForLogMap" type="com.hyjf.am.user.dao.model.customize.UserInfoForLogCustomize">
        <id column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="idcard" property="idCard" jdbcType="VARCHAR" />
        <result column="user_role" property="userRole" jdbcType="INTEGER" />
        <result column="attribute" property="attribute" jdbcType="INTEGER" />
        <result column="open_account" property="openAccount" jdbcType="INTEGER" />
        <result column="bank_open_account" property="bankOpenAccount" jdbcType="INTEGER" />
        <result column="user_status" property="userStatus" jdbcType="INTEGER" />
        <result column="recommend_name" property="recommendName" jdbcType="VARCHAR" />
        <result column="recommend_user_id" property="recommendUserId" jdbcType="INTEGER" />
        <result column="reg_time" property="regTime" jdbcType="INTEGER" />
    </resultMap>
    <select id="selectUserInfoByUserId" resultMap="UserInfoForLogMap" parameterType="java.lang.Integer">
        SELECT
        hydu.user_id,
        hydu.username AS user_name,
        hydui.truename AS real_name,
        hydu.mobile,
        hydui.role_id AS user_role,
        hydui.attribute,
        hydu.open_account,
        hydu.`status` AS user_status,
        hydur.username AS recommend_name,
        hydur.user_id AS recommend_user_id,
        hydui.idcard,
        hydu.reg_time,
        hydu.email
        FROM
        ht_user hydu
        LEFT JOIN ht_user_info hydui ON hydu.user_id = hydui.user_id
        LEFT JOIN ht_spreads_user hydsu ON hydsu.user_id = hydu.user_id
        LEFT JOIN ht_user hydur ON hydur.user_id = hydsu.spreads_user_id
        WHERE hydu.user_id =#{userId,jdbcType=INTEGER}
    </select>

</mapper>